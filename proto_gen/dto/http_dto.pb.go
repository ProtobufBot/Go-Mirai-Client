// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: http_dto.proto

package dto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bot_Captcha_CaptchaType int32

const (
	Bot_Captcha_PIC_CAPTCHA                Bot_Captcha_CaptchaType = 0
	Bot_Captcha_SLIDER_CAPTCHA             Bot_Captcha_CaptchaType = 1
	Bot_Captcha_UNSAFE_DEVICE_LOGIN_VERIFY Bot_Captcha_CaptchaType = 2
	Bot_Captcha_SMS                        Bot_Captcha_CaptchaType = 4
)

// Enum value maps for Bot_Captcha_CaptchaType.
var (
	Bot_Captcha_CaptchaType_name = map[int32]string{
		0: "PIC_CAPTCHA",
		1: "SLIDER_CAPTCHA",
		2: "UNSAFE_DEVICE_LOGIN_VERIFY",
		4: "SMS",
	}
	Bot_Captcha_CaptchaType_value = map[string]int32{
		"PIC_CAPTCHA":                0,
		"SLIDER_CAPTCHA":             1,
		"UNSAFE_DEVICE_LOGIN_VERIFY": 2,
		"SMS":                        4,
	}
)

func (x Bot_Captcha_CaptchaType) Enum() *Bot_Captcha_CaptchaType {
	p := new(Bot_Captcha_CaptchaType)
	*p = x
	return p
}

func (x Bot_Captcha_CaptchaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bot_Captcha_CaptchaType) Descriptor() protoreflect.EnumDescriptor {
	return file_http_dto_proto_enumTypes[0].Descriptor()
}

func (Bot_Captcha_CaptchaType) Type() protoreflect.EnumType {
	return &file_http_dto_proto_enumTypes[0]
}

func (x Bot_Captcha_CaptchaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bot_Captcha_CaptchaType.Descriptor instead.
func (Bot_Captcha_CaptchaType) EnumDescriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{0, 0, 0}
}

type QRCodeLoginResp_QRCodeLoginState int32

const (
	QRCodeLoginResp_Unknown                 QRCodeLoginResp_QRCodeLoginState = 0
	QRCodeLoginResp_QRCodeImageFetch        QRCodeLoginResp_QRCodeLoginState = 1
	QRCodeLoginResp_QRCodeWaitingForScan    QRCodeLoginResp_QRCodeLoginState = 2 // 等待扫描
	QRCodeLoginResp_QRCodeWaitingForConfirm QRCodeLoginResp_QRCodeLoginState = 3 // 扫码成功，请确认登陆
	QRCodeLoginResp_QRCodeTimeout           QRCodeLoginResp_QRCodeLoginState = 4 // 二维码过期
	QRCodeLoginResp_QRCodeConfirmed         QRCodeLoginResp_QRCodeLoginState = 5 // 已确认登陆
	QRCodeLoginResp_QRCodeCanceled          QRCodeLoginResp_QRCodeLoginState = 6 // 扫码被用户取消
)

// Enum value maps for QRCodeLoginResp_QRCodeLoginState.
var (
	QRCodeLoginResp_QRCodeLoginState_name = map[int32]string{
		0: "Unknown",
		1: "QRCodeImageFetch",
		2: "QRCodeWaitingForScan",
		3: "QRCodeWaitingForConfirm",
		4: "QRCodeTimeout",
		5: "QRCodeConfirmed",
		6: "QRCodeCanceled",
	}
	QRCodeLoginResp_QRCodeLoginState_value = map[string]int32{
		"Unknown":                 0,
		"QRCodeImageFetch":        1,
		"QRCodeWaitingForScan":    2,
		"QRCodeWaitingForConfirm": 3,
		"QRCodeTimeout":           4,
		"QRCodeConfirmed":         5,
		"QRCodeCanceled":          6,
	}
)

func (x QRCodeLoginResp_QRCodeLoginState) Enum() *QRCodeLoginResp_QRCodeLoginState {
	p := new(QRCodeLoginResp_QRCodeLoginState)
	*p = x
	return p
}

func (x QRCodeLoginResp_QRCodeLoginState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QRCodeLoginResp_QRCodeLoginState) Descriptor() protoreflect.EnumDescriptor {
	return file_http_dto_proto_enumTypes[1].Descriptor()
}

func (QRCodeLoginResp_QRCodeLoginState) Type() protoreflect.EnumType {
	return &file_http_dto_proto_enumTypes[1]
}

func (x QRCodeLoginResp_QRCodeLoginState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QRCodeLoginResp_QRCodeLoginState.Descriptor instead.
func (QRCodeLoginResp_QRCodeLoginState) EnumDescriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{11, 0}
}

type Bot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId    int64        `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	IsOnline bool         `protobuf:"varint,2,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	Captcha  *Bot_Captcha `protobuf:"bytes,3,opt,name=captcha,proto3" json:"captcha,omitempty"`
}

func (x *Bot) Reset() {
	*x = Bot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bot) ProtoMessage() {}

func (x *Bot) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bot.ProtoReflect.Descriptor instead.
func (*Bot) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{0}
}

func (x *Bot) GetBotId() int64 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *Bot) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *Bot) GetCaptcha() *Bot_Captcha {
	if x != nil {
		return x.Captcha
	}
	return nil
}

// 创建机器人 /bot/create/v1/
type CreateBotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId          int64  `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Password       string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	DeviceSeed     int64  `protobuf:"varint,3,opt,name=device_seed,json=deviceSeed,proto3" json:"device_seed,omitempty"`             // 设备信息随机种子
	ClientProtocol int32  `protobuf:"varint,4,opt,name=client_protocol,json=clientProtocol,proto3" json:"client_protocol,omitempty"` // 协议类型
	SignServer     string `protobuf:"bytes,5,opt,name=sign_server,json=signServer,proto3" json:"sign_server,omitempty"`
	SignServerAuth string `protobuf:"bytes,6,opt,name=sign_server_auth,json=signServerAuth,proto3" json:"sign_server_auth,omitempty"`
}

func (x *CreateBotReq) Reset() {
	*x = CreateBotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBotReq) ProtoMessage() {}

func (x *CreateBotReq) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBotReq.ProtoReflect.Descriptor instead.
func (*CreateBotReq) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBotReq) GetBotId() int64 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *CreateBotReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateBotReq) GetDeviceSeed() int64 {
	if x != nil {
		return x.DeviceSeed
	}
	return 0
}

func (x *CreateBotReq) GetClientProtocol() int32 {
	if x != nil {
		return x.ClientProtocol
	}
	return 0
}

func (x *CreateBotReq) GetSignServer() string {
	if x != nil {
		return x.SignServer
	}
	return ""
}

func (x *CreateBotReq) GetSignServerAuth() string {
	if x != nil {
		return x.SignServerAuth
	}
	return ""
}

type CreateBotResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateBotResp) Reset() {
	*x = CreateBotResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBotResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBotResp) ProtoMessage() {}

func (x *CreateBotResp) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBotResp.ProtoReflect.Descriptor instead.
func (*CreateBotResp) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{2}
}

// 删除机器人 /bot/delete/v1/
type DeleteBotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId int64 `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
}

func (x *DeleteBotReq) Reset() {
	*x = DeleteBotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBotReq) ProtoMessage() {}

func (x *DeleteBotReq) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBotReq.ProtoReflect.Descriptor instead.
func (*DeleteBotReq) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteBotReq) GetBotId() int64 {
	if x != nil {
		return x.BotId
	}
	return 0
}

type DeleteBotResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBotResp) Reset() {
	*x = DeleteBotResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBotResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBotResp) ProtoMessage() {}

func (x *DeleteBotResp) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBotResp.ProtoReflect.Descriptor instead.
func (*DeleteBotResp) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{4}
}

// 查询机器人 /bot/list/v1/
type ListBotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBotReq) Reset() {
	*x = ListBotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBotReq) ProtoMessage() {}

func (x *ListBotReq) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBotReq.ProtoReflect.Descriptor instead.
func (*ListBotReq) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{5}
}

type ListBotResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotList []*Bot `protobuf:"bytes,1,rep,name=bot_list,json=botList,proto3" json:"bot_list,omitempty"`
}

func (x *ListBotResp) Reset() {
	*x = ListBotResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBotResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBotResp) ProtoMessage() {}

func (x *ListBotResp) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBotResp.ProtoReflect.Descriptor instead.
func (*ListBotResp) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{6}
}

func (x *ListBotResp) GetBotList() []*Bot {
	if x != nil {
		return x.BotList
	}
	return nil
}

// 处理验证码 /captcha/solve/v1/
type SolveCaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId  int64  `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SolveCaptchaReq) Reset() {
	*x = SolveCaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolveCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolveCaptchaReq) ProtoMessage() {}

func (x *SolveCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolveCaptchaReq.ProtoReflect.Descriptor instead.
func (*SolveCaptchaReq) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{7}
}

func (x *SolveCaptchaReq) GetBotId() int64 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *SolveCaptchaReq) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type SolveCaptchaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SolveCaptchaResp) Reset() {
	*x = SolveCaptchaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolveCaptchaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolveCaptchaResp) ProtoMessage() {}

func (x *SolveCaptchaResp) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolveCaptchaResp.ProtoReflect.Descriptor instead.
func (*SolveCaptchaResp) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{8}
}

// 获取二维码 /qrcode/fetch/v1/
type FetchQRCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceSeed     int64 `protobuf:"varint,1,opt,name=device_seed,json=deviceSeed,proto3" json:"device_seed,omitempty"`
	ClientProtocol int32 `protobuf:"varint,2,opt,name=client_protocol,json=clientProtocol,proto3" json:"client_protocol,omitempty"` // 协议类型
}

func (x *FetchQRCodeReq) Reset() {
	*x = FetchQRCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchQRCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchQRCodeReq) ProtoMessage() {}

func (x *FetchQRCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchQRCodeReq.ProtoReflect.Descriptor instead.
func (*FetchQRCodeReq) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{9}
}

func (x *FetchQRCodeReq) GetDeviceSeed() int64 {
	if x != nil {
		return x.DeviceSeed
	}
	return 0
}

func (x *FetchQRCodeReq) GetClientProtocol() int32 {
	if x != nil {
		return x.ClientProtocol
	}
	return 0
}

// 查询二维码状态 /qrcode/query/v1/
type QueryQRCodeStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sig   []byte `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	BotId int64  `protobuf:"varint,2,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
}

func (x *QueryQRCodeStatusReq) Reset() {
	*x = QueryQRCodeStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQRCodeStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQRCodeStatusReq) ProtoMessage() {}

func (x *QueryQRCodeStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryQRCodeStatusReq.ProtoReflect.Descriptor instead.
func (*QueryQRCodeStatusReq) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{10}
}

func (x *QueryQRCodeStatusReq) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *QueryQRCodeStatusReq) GetBotId() int64 {
	if x != nil {
		return x.BotId
	}
	return 0
}

// 二维码登陆响应（获取和查询统一）
type QRCodeLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     QRCodeLoginResp_QRCodeLoginState `protobuf:"varint,1,opt,name=state,proto3,enum=dto.QRCodeLoginResp_QRCodeLoginState" json:"state,omitempty"`
	ImageData []byte                           `protobuf:"bytes,2,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`
	Sig       []byte                           `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *QRCodeLoginResp) Reset() {
	*x = QRCodeLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRCodeLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRCodeLoginResp) ProtoMessage() {}

func (x *QRCodeLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRCodeLoginResp.ProtoReflect.Descriptor instead.
func (*QRCodeLoginResp) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{11}
}

func (x *QRCodeLoginResp) GetState() QRCodeLoginResp_QRCodeLoginState {
	if x != nil {
		return x.State
	}
	return QRCodeLoginResp_Unknown
}

func (x *QRCodeLoginResp) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *QRCodeLoginResp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Disabled     bool             `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Json         bool             `protobuf:"varint,3,opt,name=json,proto3" json:"json,omitempty"`
	Protocol     int32            `protobuf:"varint,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Urls         []string         `protobuf:"bytes,5,rep,name=urls,proto3" json:"urls,omitempty"`
	EventFilter  []int32          `protobuf:"varint,6,rep,packed,name=event_filter,json=eventFilter,proto3" json:"event_filter,omitempty"`
	ApiFilter    []int32          `protobuf:"varint,7,rep,packed,name=api_filter,json=apiFilter,proto3" json:"api_filter,omitempty"`
	RegexFilter  string           `protobuf:"bytes,8,opt,name=regex_filter,json=regexFilter,proto3" json:"regex_filter,omitempty"`
	RegexReplace string           `protobuf:"bytes,9,opt,name=regex_replace,json=regexReplace,proto3" json:"regex_replace,omitempty"`
	ExtraHeader  []*Plugin_Header `protobuf:"bytes,10,rep,name=extra_header,json=extraHeader,proto3" json:"extra_header,omitempty"`
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{12}
}

func (x *Plugin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plugin) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *Plugin) GetJson() bool {
	if x != nil {
		return x.Json
	}
	return false
}

func (x *Plugin) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *Plugin) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *Plugin) GetEventFilter() []int32 {
	if x != nil {
		return x.EventFilter
	}
	return nil
}

func (x *Plugin) GetApiFilter() []int32 {
	if x != nil {
		return x.ApiFilter
	}
	return nil
}

func (x *Plugin) GetRegexFilter() string {
	if x != nil {
		return x.RegexFilter
	}
	return ""
}

func (x *Plugin) GetRegexReplace() string {
	if x != nil {
		return x.RegexReplace
	}
	return ""
}

func (x *Plugin) GetExtraHeader() []*Plugin_Header {
	if x != nil {
		return x.ExtraHeader
	}
	return nil
}

type ListPluginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPluginReq) Reset() {
	*x = ListPluginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPluginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPluginReq) ProtoMessage() {}

func (x *ListPluginReq) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPluginReq.ProtoReflect.Descriptor instead.
func (*ListPluginReq) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{13}
}

type ListPluginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugins []*Plugin `protobuf:"bytes,1,rep,name=plugins,proto3" json:"plugins,omitempty"`
}

func (x *ListPluginResp) Reset() {
	*x = ListPluginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPluginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPluginResp) ProtoMessage() {}

func (x *ListPluginResp) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPluginResp.ProtoReflect.Descriptor instead.
func (*ListPluginResp) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{14}
}

func (x *ListPluginResp) GetPlugins() []*Plugin {
	if x != nil {
		return x.Plugins
	}
	return nil
}

type SavePluginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugin *Plugin `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
}

func (x *SavePluginReq) Reset() {
	*x = SavePluginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePluginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePluginReq) ProtoMessage() {}

func (x *SavePluginReq) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePluginReq.ProtoReflect.Descriptor instead.
func (*SavePluginReq) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{15}
}

func (x *SavePluginReq) GetPlugin() *Plugin {
	if x != nil {
		return x.Plugin
	}
	return nil
}

type SavePluginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SavePluginResp) Reset() {
	*x = SavePluginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePluginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePluginResp) ProtoMessage() {}

func (x *SavePluginResp) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePluginResp.ProtoReflect.Descriptor instead.
func (*SavePluginResp) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{16}
}

type DeletePluginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeletePluginReq) Reset() {
	*x = DeletePluginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePluginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePluginReq) ProtoMessage() {}

func (x *DeletePluginReq) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePluginReq.ProtoReflect.Descriptor instead.
func (*DeletePluginReq) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{17}
}

func (x *DeletePluginReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeletePluginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePluginResp) Reset() {
	*x = DeletePluginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePluginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePluginResp) ProtoMessage() {}

func (x *DeletePluginResp) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePluginResp.ProtoReflect.Descriptor instead.
func (*DeletePluginResp) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{18}
}

type Bot_Captcha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId       int64                   `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	CaptchaType Bot_Captcha_CaptchaType `protobuf:"varint,2,opt,name=captcha_type,json=captchaType,proto3,enum=dto.Bot_Captcha_CaptchaType" json:"captcha_type,omitempty"`
	// Types that are assignable to Data:
	//
	//	*Bot_Captcha_Url
	//	*Bot_Captcha_Image
	Data isBot_Captcha_Data `protobuf_oneof:"data"`
}

func (x *Bot_Captcha) Reset() {
	*x = Bot_Captcha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bot_Captcha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bot_Captcha) ProtoMessage() {}

func (x *Bot_Captcha) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bot_Captcha.ProtoReflect.Descriptor instead.
func (*Bot_Captcha) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Bot_Captcha) GetBotId() int64 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *Bot_Captcha) GetCaptchaType() Bot_Captcha_CaptchaType {
	if x != nil {
		return x.CaptchaType
	}
	return Bot_Captcha_PIC_CAPTCHA
}

func (m *Bot_Captcha) GetData() isBot_Captcha_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Bot_Captcha) GetUrl() string {
	if x, ok := x.GetData().(*Bot_Captcha_Url); ok {
		return x.Url
	}
	return ""
}

func (x *Bot_Captcha) GetImage() []byte {
	if x, ok := x.GetData().(*Bot_Captcha_Image); ok {
		return x.Image
	}
	return nil
}

type isBot_Captcha_Data interface {
	isBot_Captcha_Data()
}

type Bot_Captcha_Url struct {
	Url string `protobuf:"bytes,3,opt,name=url,proto3,oneof"`
}

type Bot_Captcha_Image struct {
	Image []byte `protobuf:"bytes,4,opt,name=image,proto3,oneof"`
}

func (*Bot_Captcha_Url) isBot_Captcha_Data() {}

func (*Bot_Captcha_Image) isBot_Captcha_Data() {}

type Plugin_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []string `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *Plugin_Header) Reset() {
	*x = Plugin_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_dto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin_Header) ProtoMessage() {}

func (x *Plugin_Header) ProtoReflect() protoreflect.Message {
	mi := &file_http_dto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin_Header.ProtoReflect.Descriptor instead.
func (*Plugin_Header) Descriptor() ([]byte, []int) {
	return file_http_dto_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Plugin_Header) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Plugin_Header) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_http_dto_proto protoreflect.FileDescriptor

var file_http_dto_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x64, 0x74, 0x6f, 0x22, 0xda, 0x02, 0x0a, 0x03, 0x42, 0x6f, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62,
	0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x74, 0x2e, 0x43, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x1a, 0xf2, 0x01,
	0x0a, 0x07, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x74,
	0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a,
	0x0b, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x50, 0x49, 0x43, 0x5f, 0x43, 0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x4c, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x10,
	0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x4e, 0x53, 0x41, 0x46, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x10,
	0x02, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4d, 0x53, 0x10, 0x04, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xd6, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x73, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x69, 0x67,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x22, 0x0f, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06,
	0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6f,
	0x74, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x0c, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x74, 0x52,
	0x65, 0x71, 0x22, 0x32, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x23, 0x0a, 0x08, 0x62, 0x6f, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x74, 0x52, 0x07, 0x62,
	0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x0f, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x43,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x6f, 0x6c, 0x76,
	0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5a, 0x0a, 0x0e,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x65, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x3f, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73,
	0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x22, 0xaa, 0x02, 0x0a, 0x0f, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x64,
	0x74, 0x6f, 0x2e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0xa8, 0x01, 0x0a, 0x10,
	0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x57, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x10, 0x02, 0x12, 0x1b, 0x0a,
	0x17, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x13, 0x0a,
	0x0f, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64,
	0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x65, 0x64, 0x10, 0x06, 0x22, 0xef, 0x02, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x61, 0x70,
	0x69, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x65, 0x78,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x67, 0x65, 0x78, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x67, 0x65, 0x78, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12,
	0x35, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x30, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x37, 0x0a, 0x0e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x64,
	0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x22, 0x34, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x32, 0x8b, 0x04, 0x0a, 0x0b, 0x48, 0x74, 0x74, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x6f, 0x74, 0x12, 0x11, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x6f, 0x74, 0x12, 0x11, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x64, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a,
	0x07, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x74, 0x12, 0x0f, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x64, 0x74, 0x6f, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c, 0x53,
	0x6f, 0x6c, 0x76, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x14, 0x2e, 0x64, 0x74,
	0x6f, 0x2e, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0b, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x64,
	0x74, 0x6f, 0x2e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x44, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x51, 0x52, 0x43, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x64, 0x74, 0x6f,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x35, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x2e,
	0x64, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x64,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x64, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_http_dto_proto_rawDescOnce sync.Once
	file_http_dto_proto_rawDescData = file_http_dto_proto_rawDesc
)

func file_http_dto_proto_rawDescGZIP() []byte {
	file_http_dto_proto_rawDescOnce.Do(func() {
		file_http_dto_proto_rawDescData = protoimpl.X.CompressGZIP(file_http_dto_proto_rawDescData)
	})
	return file_http_dto_proto_rawDescData
}

var file_http_dto_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_http_dto_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_http_dto_proto_goTypes = []interface{}{
	(Bot_Captcha_CaptchaType)(0),          // 0: dto.Bot.Captcha.CaptchaType
	(QRCodeLoginResp_QRCodeLoginState)(0), // 1: dto.QRCodeLoginResp.QRCodeLoginState
	(*Bot)(nil),                           // 2: dto.Bot
	(*CreateBotReq)(nil),                  // 3: dto.CreateBotReq
	(*CreateBotResp)(nil),                 // 4: dto.CreateBotResp
	(*DeleteBotReq)(nil),                  // 5: dto.DeleteBotReq
	(*DeleteBotResp)(nil),                 // 6: dto.DeleteBotResp
	(*ListBotReq)(nil),                    // 7: dto.ListBotReq
	(*ListBotResp)(nil),                   // 8: dto.ListBotResp
	(*SolveCaptchaReq)(nil),               // 9: dto.SolveCaptchaReq
	(*SolveCaptchaResp)(nil),              // 10: dto.SolveCaptchaResp
	(*FetchQRCodeReq)(nil),                // 11: dto.FetchQRCodeReq
	(*QueryQRCodeStatusReq)(nil),          // 12: dto.QueryQRCodeStatusReq
	(*QRCodeLoginResp)(nil),               // 13: dto.QRCodeLoginResp
	(*Plugin)(nil),                        // 14: dto.Plugin
	(*ListPluginReq)(nil),                 // 15: dto.ListPluginReq
	(*ListPluginResp)(nil),                // 16: dto.ListPluginResp
	(*SavePluginReq)(nil),                 // 17: dto.SavePluginReq
	(*SavePluginResp)(nil),                // 18: dto.SavePluginResp
	(*DeletePluginReq)(nil),               // 19: dto.DeletePluginReq
	(*DeletePluginResp)(nil),              // 20: dto.DeletePluginResp
	(*Bot_Captcha)(nil),                   // 21: dto.Bot.Captcha
	(*Plugin_Header)(nil),                 // 22: dto.Plugin.Header
}
var file_http_dto_proto_depIdxs = []int32{
	21, // 0: dto.Bot.captcha:type_name -> dto.Bot.Captcha
	2,  // 1: dto.ListBotResp.bot_list:type_name -> dto.Bot
	1,  // 2: dto.QRCodeLoginResp.state:type_name -> dto.QRCodeLoginResp.QRCodeLoginState
	22, // 3: dto.Plugin.extra_header:type_name -> dto.Plugin.Header
	14, // 4: dto.ListPluginResp.plugins:type_name -> dto.Plugin
	14, // 5: dto.SavePluginReq.plugin:type_name -> dto.Plugin
	0,  // 6: dto.Bot.Captcha.captcha_type:type_name -> dto.Bot.Captcha.CaptchaType
	3,  // 7: dto.HttpService.CreateBot:input_type -> dto.CreateBotReq
	5,  // 8: dto.HttpService.DeleteBot:input_type -> dto.DeleteBotReq
	7,  // 9: dto.HttpService.ListBot:input_type -> dto.ListBotReq
	9,  // 10: dto.HttpService.SolveCaptcha:input_type -> dto.SolveCaptchaReq
	11, // 11: dto.HttpService.FetchQRCode:input_type -> dto.FetchQRCodeReq
	12, // 12: dto.HttpService.QueryQRCodeStatus:input_type -> dto.QueryQRCodeStatusReq
	15, // 13: dto.HttpService.ListPlugin:input_type -> dto.ListPluginReq
	17, // 14: dto.HttpService.SavePlugin:input_type -> dto.SavePluginReq
	19, // 15: dto.HttpService.DeletePlugin:input_type -> dto.DeletePluginReq
	4,  // 16: dto.HttpService.CreateBot:output_type -> dto.CreateBotResp
	6,  // 17: dto.HttpService.DeleteBot:output_type -> dto.DeleteBotResp
	8,  // 18: dto.HttpService.ListBot:output_type -> dto.ListBotResp
	10, // 19: dto.HttpService.SolveCaptcha:output_type -> dto.SolveCaptchaResp
	13, // 20: dto.HttpService.FetchQRCode:output_type -> dto.QRCodeLoginResp
	13, // 21: dto.HttpService.QueryQRCodeStatus:output_type -> dto.QRCodeLoginResp
	16, // 22: dto.HttpService.ListPlugin:output_type -> dto.ListPluginResp
	18, // 23: dto.HttpService.SavePlugin:output_type -> dto.SavePluginResp
	20, // 24: dto.HttpService.DeletePlugin:output_type -> dto.DeletePluginResp
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_http_dto_proto_init() }
func file_http_dto_proto_init() {
	if File_http_dto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_http_dto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBotResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBotResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBotResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolveCaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolveCaptchaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchQRCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQRCodeStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRCodeLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPluginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPluginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePluginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePluginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePluginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePluginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bot_Captcha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_dto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plugin_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_http_dto_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*Bot_Captcha_Url)(nil),
		(*Bot_Captcha_Image)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_http_dto_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_http_dto_proto_goTypes,
		DependencyIndexes: file_http_dto_proto_depIdxs,
		EnumInfos:         file_http_dto_proto_enumTypes,
		MessageInfos:      file_http_dto_proto_msgTypes,
	}.Build()
	File_http_dto_proto = out.File
	file_http_dto_proto_rawDesc = nil
	file_http_dto_proto_goTypes = nil
	file_http_dto_proto_depIdxs = nil
}
