// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: onebot_frame.proto

package onebot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Frame_FrameType int32

const (
	Frame_TUNKNOWN                   Frame_FrameType = 0
	Frame_TPrivateMessageEvent       Frame_FrameType = 101
	Frame_TGroupMessageEvent         Frame_FrameType = 102
	Frame_TGroupUploadNoticeEvent    Frame_FrameType = 103
	Frame_TGroupAdminNoticeEvent     Frame_FrameType = 104
	Frame_TGroupDecreaseNoticeEvent  Frame_FrameType = 105
	Frame_TGroupIncreaseNoticeEvent  Frame_FrameType = 106
	Frame_TGroupBanNoticeEvent       Frame_FrameType = 107
	Frame_TFriendAddNoticeEvent      Frame_FrameType = 108
	Frame_TGroupRecallNoticeEvent    Frame_FrameType = 109
	Frame_TFriendRecallNoticeEvent   Frame_FrameType = 110
	Frame_TFriendRequestEvent        Frame_FrameType = 111
	Frame_TGroupRequestEvent         Frame_FrameType = 112
	Frame_TGroupTempMessageEvent     Frame_FrameType = 113
	Frame_TGroupNotifyEvent          Frame_FrameType = 114
	Frame_TSendPrivateMsgReq         Frame_FrameType = 201
	Frame_TSendGroupMsgReq           Frame_FrameType = 202
	Frame_TSendMsgReq                Frame_FrameType = 203
	Frame_TDeleteMsgReq              Frame_FrameType = 204
	Frame_TGetMsgReq                 Frame_FrameType = 205
	Frame_TGetForwardMsgReq          Frame_FrameType = 206
	Frame_TSendLikeReq               Frame_FrameType = 207
	Frame_TSetGroupKickReq           Frame_FrameType = 208
	Frame_TSetGroupBanReq            Frame_FrameType = 209
	Frame_TSetGroupAnonymousReq      Frame_FrameType = 210
	Frame_TSetGroupWholeBanReq       Frame_FrameType = 211
	Frame_TSetGroupAdminReq          Frame_FrameType = 212
	Frame_TSetGroupAnonymousBanReq   Frame_FrameType = 213
	Frame_TSetGroupCardReq           Frame_FrameType = 214
	Frame_TSetGroupNameReq           Frame_FrameType = 215
	Frame_TSetGroupLeaveReq          Frame_FrameType = 216
	Frame_TSetGroupSpecialTitleReq   Frame_FrameType = 217
	Frame_TSetFriendAddRequestReq    Frame_FrameType = 218
	Frame_TSetGroupAddRequestReq     Frame_FrameType = 219
	Frame_TGetLoginInfoReq           Frame_FrameType = 220
	Frame_TGetStrangerInfoReq        Frame_FrameType = 221
	Frame_TGetFriendListReq          Frame_FrameType = 222
	Frame_TGetGroupInfoReq           Frame_FrameType = 223
	Frame_TGetGroupListReq           Frame_FrameType = 224
	Frame_TGetGroupMemberInfoReq     Frame_FrameType = 225
	Frame_TGetGroupMemberListReq     Frame_FrameType = 226
	Frame_TGetGroupHonorInfoReq      Frame_FrameType = 227
	Frame_TGetCookiesReq             Frame_FrameType = 228
	Frame_TGetCsrfTokenReq           Frame_FrameType = 229
	Frame_TGetCredentialsReq         Frame_FrameType = 230
	Frame_TGetRecordReq              Frame_FrameType = 231
	Frame_TGetImageReq               Frame_FrameType = 232
	Frame_TCanSendImageReq           Frame_FrameType = 233
	Frame_TCanSendRecordReq          Frame_FrameType = 234
	Frame_TGetStatusReq              Frame_FrameType = 235
	Frame_TGetVersionInfoReq         Frame_FrameType = 236
	Frame_TSetRestartReq             Frame_FrameType = 237
	Frame_TCleanCacheReq             Frame_FrameType = 238
	Frame_TSetGroupSignInReq         Frame_FrameType = 239
	Frame_TSendMusicReq              Frame_FrameType = 240
	Frame_TSendGroupPokeReq          Frame_FrameType = 241
	Frame_TSendFriendPokeReq         Frame_FrameType = 242
	Frame_TSendPrivateMsgResp        Frame_FrameType = 301
	Frame_TSendGroupMsgResp          Frame_FrameType = 302
	Frame_TSendMsgResp               Frame_FrameType = 303
	Frame_TDeleteMsgResp             Frame_FrameType = 304
	Frame_TGetMsgResp                Frame_FrameType = 305
	Frame_TGetForwardMsgResp         Frame_FrameType = 306
	Frame_TSendLikeResp              Frame_FrameType = 307
	Frame_TSetGroupKickResp          Frame_FrameType = 308
	Frame_TSetGroupBanResp           Frame_FrameType = 309
	Frame_TSetGroupAnonymousResp     Frame_FrameType = 310
	Frame_TSetGroupWholeBanResp      Frame_FrameType = 311
	Frame_TSetGroupAdminResp         Frame_FrameType = 312
	Frame_TSetGroupAnonymousBanResp  Frame_FrameType = 313
	Frame_TSetGroupCardResp          Frame_FrameType = 314
	Frame_TSetGroupNameResp          Frame_FrameType = 315
	Frame_TSetGroupLeaveResp         Frame_FrameType = 316
	Frame_TSetGroupSpecialTitleResp  Frame_FrameType = 317
	Frame_TSetFriendAddRequestResp   Frame_FrameType = 318
	Frame_TSetGroupAddRequestResp    Frame_FrameType = 319
	Frame_TGetLoginInfoResp          Frame_FrameType = 320
	Frame_TGetStrangerInfoResp       Frame_FrameType = 321
	Frame_TGetFriendListResp         Frame_FrameType = 322
	Frame_TGetGroupInfoResp          Frame_FrameType = 323
	Frame_TGetGroupListResp          Frame_FrameType = 324
	Frame_TGetGroupMemberInfoResp    Frame_FrameType = 325
	Frame_TGetGroupMemberListResp    Frame_FrameType = 326
	Frame_TGetGroupHonorInfoResp     Frame_FrameType = 327
	Frame_TGetCookiesResp            Frame_FrameType = 328
	Frame_TGetCsrfTokenResp          Frame_FrameType = 329
	Frame_TGetCredentialsResp        Frame_FrameType = 330
	Frame_TGetRecordResp             Frame_FrameType = 331
	Frame_TGetImageResp              Frame_FrameType = 332
	Frame_TCanSendImageResp          Frame_FrameType = 333
	Frame_TCanSendRecordResp         Frame_FrameType = 334
	Frame_TGetStatusResp             Frame_FrameType = 335
	Frame_TGetVersionInfoResp        Frame_FrameType = 336
	Frame_TSetRestartResp            Frame_FrameType = 337
	Frame_TCleanCacheResp            Frame_FrameType = 338
	Frame_TSetGroupSignInResp        Frame_FrameType = 339
	Frame_TSendMusicResp             Frame_FrameType = 340
	Frame_TSendGroupPokeResp         Frame_FrameType = 341
	Frame_TSendFriendPokeResp        Frame_FrameType = 342
	Frame_TOSendPrivateMsgResp       Frame_FrameType = 401
	Frame_TOSendGroupMsgResp         Frame_FrameType = 402
	Frame_TOSendMsgResp              Frame_FrameType = 403
	Frame_TODeleteMsgResp            Frame_FrameType = 404
	Frame_TOGetMsgResp               Frame_FrameType = 405
	Frame_TOGetForwardMsgResp        Frame_FrameType = 406
	Frame_TOSendLikeResp             Frame_FrameType = 407
	Frame_TOSetGroupKickResp         Frame_FrameType = 408
	Frame_TOSetGroupBanResp          Frame_FrameType = 409
	Frame_TOSetGroupAnonymousResp    Frame_FrameType = 410
	Frame_TOSetGroupWholeBanResp     Frame_FrameType = 411
	Frame_TOSetGroupAdminResp        Frame_FrameType = 412
	Frame_TOSetGroupAnonymousBanResp Frame_FrameType = 413
	Frame_TOSetGroupCardResp         Frame_FrameType = 414
	Frame_TOSetGroupNameResp         Frame_FrameType = 415
	Frame_TOSetGroupLeaveResp        Frame_FrameType = 416
	Frame_TOSetGroupSpecialTitleResp Frame_FrameType = 417
	Frame_TOSetFriendAddRequestResp  Frame_FrameType = 418
	Frame_TOSetGroupAddRequestResp   Frame_FrameType = 419
	Frame_TOGetLoginInfoResp         Frame_FrameType = 420
	Frame_TOGetStrangerInfoResp      Frame_FrameType = 421
	Frame_TOGetFriendListResp        Frame_FrameType = 422
	Frame_TOGetGroupInfoResp         Frame_FrameType = 423
	Frame_TOGetGroupListResp         Frame_FrameType = 424
	Frame_TOGetGroupMemberInfoResp   Frame_FrameType = 425
	Frame_TOGetGroupMemberListResp   Frame_FrameType = 426
	Frame_TOGetGroupHonorInfoResp    Frame_FrameType = 427
	Frame_TOGetCookiesResp           Frame_FrameType = 428
	Frame_TOGetCsrfTokenResp         Frame_FrameType = 429
	Frame_TOGetCredentialsResp       Frame_FrameType = 430
	Frame_TOGetRecordResp            Frame_FrameType = 431
	Frame_TOGetImageResp             Frame_FrameType = 432
	Frame_TOCanSendImageResp         Frame_FrameType = 433
	Frame_TOCanSendRecordResp        Frame_FrameType = 434
	Frame_TOGetStatusResp            Frame_FrameType = 435
	Frame_TOGetVersionInfoResp       Frame_FrameType = 436
	Frame_TOSetRestartResp           Frame_FrameType = 437
	Frame_TOCleanCacheResp           Frame_FrameType = 438
	Frame_TOSetGroupSignInResp       Frame_FrameType = 439
	Frame_TOSendMusicResp            Frame_FrameType = 440
	Frame_TOSendGroupPokeResp        Frame_FrameType = 441
	Frame_TOSendFriendPokeResp       Frame_FrameType = 442
)

// Enum value maps for Frame_FrameType.
var (
	Frame_FrameType_name = map[int32]string{
		0:   "TUNKNOWN",
		101: "TPrivateMessageEvent",
		102: "TGroupMessageEvent",
		103: "TGroupUploadNoticeEvent",
		104: "TGroupAdminNoticeEvent",
		105: "TGroupDecreaseNoticeEvent",
		106: "TGroupIncreaseNoticeEvent",
		107: "TGroupBanNoticeEvent",
		108: "TFriendAddNoticeEvent",
		109: "TGroupRecallNoticeEvent",
		110: "TFriendRecallNoticeEvent",
		111: "TFriendRequestEvent",
		112: "TGroupRequestEvent",
		113: "TGroupTempMessageEvent",
		114: "TGroupNotifyEvent",
		201: "TSendPrivateMsgReq",
		202: "TSendGroupMsgReq",
		203: "TSendMsgReq",
		204: "TDeleteMsgReq",
		205: "TGetMsgReq",
		206: "TGetForwardMsgReq",
		207: "TSendLikeReq",
		208: "TSetGroupKickReq",
		209: "TSetGroupBanReq",
		210: "TSetGroupAnonymousReq",
		211: "TSetGroupWholeBanReq",
		212: "TSetGroupAdminReq",
		213: "TSetGroupAnonymousBanReq",
		214: "TSetGroupCardReq",
		215: "TSetGroupNameReq",
		216: "TSetGroupLeaveReq",
		217: "TSetGroupSpecialTitleReq",
		218: "TSetFriendAddRequestReq",
		219: "TSetGroupAddRequestReq",
		220: "TGetLoginInfoReq",
		221: "TGetStrangerInfoReq",
		222: "TGetFriendListReq",
		223: "TGetGroupInfoReq",
		224: "TGetGroupListReq",
		225: "TGetGroupMemberInfoReq",
		226: "TGetGroupMemberListReq",
		227: "TGetGroupHonorInfoReq",
		228: "TGetCookiesReq",
		229: "TGetCsrfTokenReq",
		230: "TGetCredentialsReq",
		231: "TGetRecordReq",
		232: "TGetImageReq",
		233: "TCanSendImageReq",
		234: "TCanSendRecordReq",
		235: "TGetStatusReq",
		236: "TGetVersionInfoReq",
		237: "TSetRestartReq",
		238: "TCleanCacheReq",
		239: "TSetGroupSignInReq",
		240: "TSendMusicReq",
		241: "TSendGroupPokeReq",
		242: "TSendFriendPokeReq",
		301: "TSendPrivateMsgResp",
		302: "TSendGroupMsgResp",
		303: "TSendMsgResp",
		304: "TDeleteMsgResp",
		305: "TGetMsgResp",
		306: "TGetForwardMsgResp",
		307: "TSendLikeResp",
		308: "TSetGroupKickResp",
		309: "TSetGroupBanResp",
		310: "TSetGroupAnonymousResp",
		311: "TSetGroupWholeBanResp",
		312: "TSetGroupAdminResp",
		313: "TSetGroupAnonymousBanResp",
		314: "TSetGroupCardResp",
		315: "TSetGroupNameResp",
		316: "TSetGroupLeaveResp",
		317: "TSetGroupSpecialTitleResp",
		318: "TSetFriendAddRequestResp",
		319: "TSetGroupAddRequestResp",
		320: "TGetLoginInfoResp",
		321: "TGetStrangerInfoResp",
		322: "TGetFriendListResp",
		323: "TGetGroupInfoResp",
		324: "TGetGroupListResp",
		325: "TGetGroupMemberInfoResp",
		326: "TGetGroupMemberListResp",
		327: "TGetGroupHonorInfoResp",
		328: "TGetCookiesResp",
		329: "TGetCsrfTokenResp",
		330: "TGetCredentialsResp",
		331: "TGetRecordResp",
		332: "TGetImageResp",
		333: "TCanSendImageResp",
		334: "TCanSendRecordResp",
		335: "TGetStatusResp",
		336: "TGetVersionInfoResp",
		337: "TSetRestartResp",
		338: "TCleanCacheResp",
		339: "TSetGroupSignInResp",
		340: "TSendMusicResp",
		341: "TSendGroupPokeResp",
		342: "TSendFriendPokeResp",
		401: "TOSendPrivateMsgResp",
		402: "TOSendGroupMsgResp",
		403: "TOSendMsgResp",
		404: "TODeleteMsgResp",
		405: "TOGetMsgResp",
		406: "TOGetForwardMsgResp",
		407: "TOSendLikeResp",
		408: "TOSetGroupKickResp",
		409: "TOSetGroupBanResp",
		410: "TOSetGroupAnonymousResp",
		411: "TOSetGroupWholeBanResp",
		412: "TOSetGroupAdminResp",
		413: "TOSetGroupAnonymousBanResp",
		414: "TOSetGroupCardResp",
		415: "TOSetGroupNameResp",
		416: "TOSetGroupLeaveResp",
		417: "TOSetGroupSpecialTitleResp",
		418: "TOSetFriendAddRequestResp",
		419: "TOSetGroupAddRequestResp",
		420: "TOGetLoginInfoResp",
		421: "TOGetStrangerInfoResp",
		422: "TOGetFriendListResp",
		423: "TOGetGroupInfoResp",
		424: "TOGetGroupListResp",
		425: "TOGetGroupMemberInfoResp",
		426: "TOGetGroupMemberListResp",
		427: "TOGetGroupHonorInfoResp",
		428: "TOGetCookiesResp",
		429: "TOGetCsrfTokenResp",
		430: "TOGetCredentialsResp",
		431: "TOGetRecordResp",
		432: "TOGetImageResp",
		433: "TOCanSendImageResp",
		434: "TOCanSendRecordResp",
		435: "TOGetStatusResp",
		436: "TOGetVersionInfoResp",
		437: "TOSetRestartResp",
		438: "TOCleanCacheResp",
		439: "TOSetGroupSignInResp",
		440: "TOSendMusicResp",
		441: "TOSendGroupPokeResp",
		442: "TOSendFriendPokeResp",
	}
	Frame_FrameType_value = map[string]int32{
		"TUNKNOWN":                   0,
		"TPrivateMessageEvent":       101,
		"TGroupMessageEvent":         102,
		"TGroupUploadNoticeEvent":    103,
		"TGroupAdminNoticeEvent":     104,
		"TGroupDecreaseNoticeEvent":  105,
		"TGroupIncreaseNoticeEvent":  106,
		"TGroupBanNoticeEvent":       107,
		"TFriendAddNoticeEvent":      108,
		"TGroupRecallNoticeEvent":    109,
		"TFriendRecallNoticeEvent":   110,
		"TFriendRequestEvent":        111,
		"TGroupRequestEvent":         112,
		"TGroupTempMessageEvent":     113,
		"TGroupNotifyEvent":          114,
		"TSendPrivateMsgReq":         201,
		"TSendGroupMsgReq":           202,
		"TSendMsgReq":                203,
		"TDeleteMsgReq":              204,
		"TGetMsgReq":                 205,
		"TGetForwardMsgReq":          206,
		"TSendLikeReq":               207,
		"TSetGroupKickReq":           208,
		"TSetGroupBanReq":            209,
		"TSetGroupAnonymousReq":      210,
		"TSetGroupWholeBanReq":       211,
		"TSetGroupAdminReq":          212,
		"TSetGroupAnonymousBanReq":   213,
		"TSetGroupCardReq":           214,
		"TSetGroupNameReq":           215,
		"TSetGroupLeaveReq":          216,
		"TSetGroupSpecialTitleReq":   217,
		"TSetFriendAddRequestReq":    218,
		"TSetGroupAddRequestReq":     219,
		"TGetLoginInfoReq":           220,
		"TGetStrangerInfoReq":        221,
		"TGetFriendListReq":          222,
		"TGetGroupInfoReq":           223,
		"TGetGroupListReq":           224,
		"TGetGroupMemberInfoReq":     225,
		"TGetGroupMemberListReq":     226,
		"TGetGroupHonorInfoReq":      227,
		"TGetCookiesReq":             228,
		"TGetCsrfTokenReq":           229,
		"TGetCredentialsReq":         230,
		"TGetRecordReq":              231,
		"TGetImageReq":               232,
		"TCanSendImageReq":           233,
		"TCanSendRecordReq":          234,
		"TGetStatusReq":              235,
		"TGetVersionInfoReq":         236,
		"TSetRestartReq":             237,
		"TCleanCacheReq":             238,
		"TSetGroupSignInReq":         239,
		"TSendMusicReq":              240,
		"TSendGroupPokeReq":          241,
		"TSendFriendPokeReq":         242,
		"TSendPrivateMsgResp":        301,
		"TSendGroupMsgResp":          302,
		"TSendMsgResp":               303,
		"TDeleteMsgResp":             304,
		"TGetMsgResp":                305,
		"TGetForwardMsgResp":         306,
		"TSendLikeResp":              307,
		"TSetGroupKickResp":          308,
		"TSetGroupBanResp":           309,
		"TSetGroupAnonymousResp":     310,
		"TSetGroupWholeBanResp":      311,
		"TSetGroupAdminResp":         312,
		"TSetGroupAnonymousBanResp":  313,
		"TSetGroupCardResp":          314,
		"TSetGroupNameResp":          315,
		"TSetGroupLeaveResp":         316,
		"TSetGroupSpecialTitleResp":  317,
		"TSetFriendAddRequestResp":   318,
		"TSetGroupAddRequestResp":    319,
		"TGetLoginInfoResp":          320,
		"TGetStrangerInfoResp":       321,
		"TGetFriendListResp":         322,
		"TGetGroupInfoResp":          323,
		"TGetGroupListResp":          324,
		"TGetGroupMemberInfoResp":    325,
		"TGetGroupMemberListResp":    326,
		"TGetGroupHonorInfoResp":     327,
		"TGetCookiesResp":            328,
		"TGetCsrfTokenResp":          329,
		"TGetCredentialsResp":        330,
		"TGetRecordResp":             331,
		"TGetImageResp":              332,
		"TCanSendImageResp":          333,
		"TCanSendRecordResp":         334,
		"TGetStatusResp":             335,
		"TGetVersionInfoResp":        336,
		"TSetRestartResp":            337,
		"TCleanCacheResp":            338,
		"TSetGroupSignInResp":        339,
		"TSendMusicResp":             340,
		"TSendGroupPokeResp":         341,
		"TSendFriendPokeResp":        342,
		"TOSendPrivateMsgResp":       401,
		"TOSendGroupMsgResp":         402,
		"TOSendMsgResp":              403,
		"TODeleteMsgResp":            404,
		"TOGetMsgResp":               405,
		"TOGetForwardMsgResp":        406,
		"TOSendLikeResp":             407,
		"TOSetGroupKickResp":         408,
		"TOSetGroupBanResp":          409,
		"TOSetGroupAnonymousResp":    410,
		"TOSetGroupWholeBanResp":     411,
		"TOSetGroupAdminResp":        412,
		"TOSetGroupAnonymousBanResp": 413,
		"TOSetGroupCardResp":         414,
		"TOSetGroupNameResp":         415,
		"TOSetGroupLeaveResp":        416,
		"TOSetGroupSpecialTitleResp": 417,
		"TOSetFriendAddRequestResp":  418,
		"TOSetGroupAddRequestResp":   419,
		"TOGetLoginInfoResp":         420,
		"TOGetStrangerInfoResp":      421,
		"TOGetFriendListResp":        422,
		"TOGetGroupInfoResp":         423,
		"TOGetGroupListResp":         424,
		"TOGetGroupMemberInfoResp":   425,
		"TOGetGroupMemberListResp":   426,
		"TOGetGroupHonorInfoResp":    427,
		"TOGetCookiesResp":           428,
		"TOGetCsrfTokenResp":         429,
		"TOGetCredentialsResp":       430,
		"TOGetRecordResp":            431,
		"TOGetImageResp":             432,
		"TOCanSendImageResp":         433,
		"TOCanSendRecordResp":        434,
		"TOGetStatusResp":            435,
		"TOGetVersionInfoResp":       436,
		"TOSetRestartResp":           437,
		"TOCleanCacheResp":           438,
		"TOSetGroupSignInResp":       439,
		"TOSendMusicResp":            440,
		"TOSendGroupPokeResp":        441,
		"TOSendFriendPokeResp":       442,
	}
)

func (x Frame_FrameType) Enum() *Frame_FrameType {
	p := new(Frame_FrameType)
	*p = x
	return p
}

func (x Frame_FrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Frame_FrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_onebot_frame_proto_enumTypes[0].Descriptor()
}

func (Frame_FrameType) Type() protoreflect.EnumType {
	return &file_onebot_frame_proto_enumTypes[0]
}

func (x Frame_FrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Frame_FrameType.Descriptor instead.
func (Frame_FrameType) EnumDescriptor() ([]byte, []int) {
	return file_onebot_frame_proto_rawDescGZIP(), []int{0, 0}
}

type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId         int64             `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	FrameType     Frame_FrameType   `protobuf:"varint,2,opt,name=frame_type,json=frameType,proto3,enum=onebot.Frame_FrameType" json:"frame_type,omitempty"`
	Echo          string            `protobuf:"bytes,3,opt,name=echo,proto3" json:"echo,omitempty"`
	Ok            bool              `protobuf:"varint,4,opt,name=ok,proto3" json:"ok,omitempty"` // 是否正常 （API resp)
	Time          int64             `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	SelfId        int64             `protobuf:"varint,6,opt,name=self_id,json=selfId,proto3" json:"self_id,omitempty"`
	PostType      string            `protobuf:"bytes,7,opt,name=post_type,json=postType,proto3" json:"post_type,omitempty"`
	SubType       string            `protobuf:"bytes,8,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	MessageType   string            `protobuf:"bytes,9,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	NoticeType    string            `protobuf:"bytes,10,opt,name=notice_type,json=noticeType,proto3" json:"notice_type,omitempty"`
	RequestType   string            `protobuf:"bytes,11,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
	MetaEventType string            `protobuf:"bytes,12,opt,name=meta_event_type,json=metaEventType,proto3" json:"meta_event_type,omitempty"`
	Status        *anypb.Any        `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	Code          int32             `protobuf:"varint,14,opt,name=code,proto3" json:"code,omitempty"`
	Data          *anypb.Any        `protobuf:"bytes,15,opt,name=data,proto3" json:"data,omitempty"`
	Params        *Params           `protobuf:"bytes,16,opt,name=params,proto3" json:"params,omitempty"`
	MessageId     int32             `protobuf:"varint,17,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId        int64             `protobuf:"varint,18,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Message       []*Message        `protobuf:"bytes,19,rep,name=message,proto3" json:"message,omitempty"`
	RawMessage    string            `protobuf:"bytes,20,opt,name=raw_message,json=rawMessage,proto3" json:"raw_message,omitempty"`
	Font          int32             `protobuf:"varint,21,opt,name=font,proto3" json:"font,omitempty"`
	Sender        *Frame_Sender     `protobuf:"bytes,22,opt,name=sender,proto3" json:"sender,omitempty"`
	Anonymous     *Frame_Anonymous  `protobuf:"bytes,23,opt,name=anonymous,proto3" json:"anonymous,omitempty"`
	GroupId       int64             `protobuf:"varint,24,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	File          *Frame_File       `protobuf:"bytes,25,opt,name=file,proto3" json:"file,omitempty"`
	GroupName     string            `protobuf:"bytes,26,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	SenderCard    string            `protobuf:"bytes,27,opt,name=sender_card,json=senderCard,proto3" json:"sender_card,omitempty"`
	TargetId      int64             `protobuf:"varint,28,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	TargetCard    string            `protobuf:"bytes,29,opt,name=target_card,json=targetCard,proto3" json:"target_card,omitempty"`
	Honor         string            `protobuf:"bytes,30,opt,name=honor,proto3" json:"honor,omitempty"`
	OperatorId    int64             `protobuf:"varint,31,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	MemberUid     string            `protobuf:"bytes,32,opt,name=member_uid,json=memberUid,proto3" json:"member_uid,omitempty"`
	OperatorUid   string            `protobuf:"bytes,33,opt,name=operator_uid,json=operatorUid,proto3" json:"operator_uid,omitempty"`
	ExitType      uint32            `protobuf:"varint,34,opt,name=exit_type,json=exitType,proto3" json:"exit_type,omitempty"`
	InvitorUid    string            `protobuf:"bytes,35,opt,name=invitor_uid,json=invitorUid,proto3" json:"invitor_uid,omitempty"`
	JoinType      uint32            `protobuf:"varint,36,opt,name=join_type,json=joinType,proto3" json:"join_type,omitempty"`
	Duration      int64             `protobuf:"varint,37,opt,name=duration,proto3" json:"duration,omitempty"`
	TargetUid     string            `protobuf:"bytes,38,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	SourceUin     uint32            `protobuf:"varint,39,opt,name=source_uin,json=sourceUin,proto3" json:"source_uin,omitempty"`
	SourceUid     string            `protobuf:"bytes,40,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`
	Msg           string            `protobuf:"bytes,41,opt,name=msg,proto3" json:"msg,omitempty"`
	Source        string            `protobuf:"bytes,42,opt,name=source,proto3" json:"source,omitempty"`
	AuthorUid     string            `protobuf:"bytes,43,opt,name=author_uid,json=authorUid,proto3" json:"author_uid,omitempty"`
	Sequence      uint64            `protobuf:"varint,44,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Random        uint32            `protobuf:"varint,45,opt,name=random,proto3" json:"random,omitempty"`
	FromUid       string            `protobuf:"bytes,46,opt,name=from_uid,json=fromUid,proto3" json:"from_uid,omitempty"`
	Comment       string            `protobuf:"bytes,47,opt,name=comment,proto3" json:"comment,omitempty"`
	Flag          string            `protobuf:"bytes,48,opt,name=flag,proto3" json:"flag,omitempty"`
	RequestId     int64             `protobuf:"varint,49,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	UserNick      string            `protobuf:"bytes,50,opt,name=user_nick,json=userNick,proto3" json:"user_nick,omitempty"`
	Action        string            `protobuf:"bytes,51,opt,name=action,proto3" json:"action,omitempty"`
	ActionUinNick string            `protobuf:"bytes,52,opt,name=action_uin_nick,json=actionUinNick,proto3" json:"action_uin_nick,omitempty"`
	ActionUin     int64             `protobuf:"varint,53,opt,name=action_uin,json=actionUin,proto3" json:"action_uin,omitempty"`
	Check         bool              `protobuf:"varint,54,opt,name=check,proto3" json:"check,omitempty"`
	Suspicious    bool              `protobuf:"varint,55,opt,name=suspicious,proto3" json:"suspicious,omitempty"`
	Answer        string            `protobuf:"bytes,56,opt,name=answer,proto3" json:"answer,omitempty"`
	Extra         map[string]string `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to PbData:
	//
	//	*Frame_PrivateMessageEvent
	//	*Frame_GroupMessageEvent
	//	*Frame_GroupUploadNoticeEvent
	//	*Frame_GroupAdminNoticeEvent
	//	*Frame_GroupDecreaseNoticeEvent
	//	*Frame_GroupIncreaseNoticeEvent
	//	*Frame_GroupBanNoticeEvent
	//	*Frame_FriendAddNoticeEvent
	//	*Frame_GroupRecallNoticeEvent
	//	*Frame_FriendRecallNoticeEvent
	//	*Frame_FriendRequestEvent
	//	*Frame_GroupRequestEvent
	//	*Frame_GroupTempMessageEvent
	//	*Frame_GroupNotifyEvent
	//	*Frame_SendPrivateMsgReq
	//	*Frame_SendGroupMsgReq
	//	*Frame_SendMsgReq
	//	*Frame_DeleteMsgReq
	//	*Frame_GetMsgReq
	//	*Frame_GetForwardMsgReq
	//	*Frame_SendLikeReq
	//	*Frame_SetGroupKickReq
	//	*Frame_SetGroupBanReq
	//	*Frame_SetGroupAnonymousBanReq
	//	*Frame_SetGroupWholeBanReq
	//	*Frame_SetGroupAdminReq
	//	*Frame_SetGroupAnonymousReq
	//	*Frame_SetGroupCardReq
	//	*Frame_SetGroupNameReq
	//	*Frame_SetGroupLeaveReq
	//	*Frame_SetGroupSpecialTitleReq
	//	*Frame_SetFriendAddRequestReq
	//	*Frame_SetGroupAddRequestReq
	//	*Frame_GetLoginInfoReq
	//	*Frame_GetStrangerInfoReq
	//	*Frame_GetFriendListReq
	//	*Frame_GetGroupInfoReq
	//	*Frame_GetGroupListReq
	//	*Frame_GetGroupMemberInfoReq
	//	*Frame_GetGroupMemberListReq
	//	*Frame_GetGroupHonorInfoReq
	//	*Frame_GetCookiesReq
	//	*Frame_GetCsrfTokenReq
	//	*Frame_GetCredentialsReq
	//	*Frame_GetRecordReq
	//	*Frame_GetImageReq
	//	*Frame_CanSendImageReq
	//	*Frame_CanSendRecordReq
	//	*Frame_GetStatusReq
	//	*Frame_GetVersionInfoReq
	//	*Frame_SetRestartReq
	//	*Frame_CleanCacheReq
	//	*Frame_SetGroupSignInReq
	//	*Frame_SendMusicReq
	//	*Frame_SendGroupPokeReq
	//	*Frame_SendFriendPokeReq
	//	*Frame_SendPrivateMsgResp
	//	*Frame_SendGroupMsgResp
	//	*Frame_SendMsgResp
	//	*Frame_DeleteMsgResp
	//	*Frame_GetMsgResp
	//	*Frame_GetForwardMsgResp
	//	*Frame_SendLikeResp
	//	*Frame_SetGroupKickResp
	//	*Frame_SetGroupBanResp
	//	*Frame_SetGroupAnonymousBanResp
	//	*Frame_SetGroupWholeBanResp
	//	*Frame_SetGroupAdminResp
	//	*Frame_SetGroupAnonymousResp
	//	*Frame_SetGroupCardResp
	//	*Frame_SetGroupNameResp
	//	*Frame_SetGroupLeaveResp
	//	*Frame_SetGroupSpecialTitleResp
	//	*Frame_SetFriendAddRequestResp
	//	*Frame_SetGroupAddRequestResp
	//	*Frame_GetLoginInfoResp
	//	*Frame_GetStrangerInfoResp
	//	*Frame_GetFriendListResp
	//	*Frame_GetGroupInfoResp
	//	*Frame_GetGroupListResp
	//	*Frame_GetGroupMemberInfoResp
	//	*Frame_GetGroupMemberListResp
	//	*Frame_GetGroupHonorInfoResp
	//	*Frame_GetCookiesResp
	//	*Frame_GetCsrfTokenResp
	//	*Frame_GetCredentialsResp
	//	*Frame_GetRecordResp
	//	*Frame_GetImageResp
	//	*Frame_CanSendImageResp
	//	*Frame_CanSendRecordResp
	//	*Frame_GetStatusResp
	//	*Frame_GetVersionInfoResp
	//	*Frame_SetRestartResp
	//	*Frame_CleanCacheResp
	//	*Frame_SetGroupSignInResp
	//	*Frame_SendMusicResp
	//	*Frame_SendGroupPokeResp
	//	*Frame_SendFriendPokeResp
	//	*Frame_OSendPrivateMsgResp
	//	*Frame_OSendGroupMsgResp
	//	*Frame_OSendMsgResp
	//	*Frame_ODeleteMsgResp
	//	*Frame_OGetMsgResp
	//	*Frame_OGetForwardMsgResp
	//	*Frame_OSendLikeResp
	//	*Frame_OSetGroupKickResp
	//	*Frame_OSetGroupBanResp
	//	*Frame_OSetGroupAnonymousBanResp
	//	*Frame_OSetGroupWholeBanResp
	//	*Frame_OSetGroupAdminResp
	//	*Frame_OSetGroupAnonymousResp
	//	*Frame_OSetGroupCardResp
	//	*Frame_OSetGroupNameResp
	//	*Frame_OSetGroupLeaveResp
	//	*Frame_OSetGroupSpecialTitleResp
	//	*Frame_OSetFriendAddRequestResp
	//	*Frame_OSetGroupAddRequestResp
	//	*Frame_OGetLoginInfoResp
	//	*Frame_OGetStrangerInfoResp
	//	*Frame_OGetFriendListResp
	//	*Frame_OGetGroupInfoResp
	//	*Frame_OGetGroupListResp
	//	*Frame_OGetGroupMemberInfoResp
	//	*Frame_OGetGroupMemberListResp
	//	*Frame_OGetGroupHonorInfoResp
	//	*Frame_OGetCookiesResp
	//	*Frame_OGetCsrfTokenResp
	//	*Frame_OGetCredentialsResp
	//	*Frame_OGetRecordResp
	//	*Frame_OGetImageResp
	//	*Frame_OCanSendImageResp
	//	*Frame_OCanSendRecordResp
	//	*Frame_OGetStatusResp
	//	*Frame_OGetVersionInfoResp
	//	*Frame_OSetRestartResp
	//	*Frame_OCleanCacheResp
	//	*Frame_OSetGroupSignInResp
	//	*Frame_OSendMusicResp
	//	*Frame_OSendGroupPokeResp
	//	*Frame_OSendFriendPokeResp
	PbData isFrame_PbData `protobuf_oneof:"pb_data" json:"pb_data,omitempty""`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_frame_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_frame_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_onebot_frame_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetBotId() int64 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *Frame) GetFrameType() Frame_FrameType {
	if x != nil {
		return x.FrameType
	}
	return Frame_TUNKNOWN
}

func (x *Frame) GetEcho() string {
	if x != nil {
		return x.Echo
	}
	return ""
}

func (x *Frame) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *Frame) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Frame) GetSelfId() int64 {
	if x != nil {
		return x.SelfId
	}
	return 0
}

func (x *Frame) GetPostType() string {
	if x != nil {
		return x.PostType
	}
	return ""
}

func (x *Frame) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *Frame) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *Frame) GetNoticeType() string {
	if x != nil {
		return x.NoticeType
	}
	return ""
}

func (x *Frame) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

func (x *Frame) GetMetaEventType() string {
	if x != nil {
		return x.MetaEventType
	}
	return ""
}

func (x *Frame) GetStatus() *anypb.Any {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Frame) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Frame) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Frame) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Frame) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *Frame) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Frame) GetMessage() []*Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Frame) GetRawMessage() string {
	if x != nil {
		return x.RawMessage
	}
	return ""
}

func (x *Frame) GetFont() int32 {
	if x != nil {
		return x.Font
	}
	return 0
}

func (x *Frame) GetSender() *Frame_Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Frame) GetAnonymous() *Frame_Anonymous {
	if x != nil {
		return x.Anonymous
	}
	return nil
}

func (x *Frame) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Frame) GetFile() *Frame_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Frame) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Frame) GetSenderCard() string {
	if x != nil {
		return x.SenderCard
	}
	return ""
}

func (x *Frame) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Frame) GetTargetCard() string {
	if x != nil {
		return x.TargetCard
	}
	return ""
}

func (x *Frame) GetHonor() string {
	if x != nil {
		return x.Honor
	}
	return ""
}

func (x *Frame) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *Frame) GetMemberUid() string {
	if x != nil {
		return x.MemberUid
	}
	return ""
}

func (x *Frame) GetOperatorUid() string {
	if x != nil {
		return x.OperatorUid
	}
	return ""
}

func (x *Frame) GetExitType() uint32 {
	if x != nil {
		return x.ExitType
	}
	return 0
}

func (x *Frame) GetInvitorUid() string {
	if x != nil {
		return x.InvitorUid
	}
	return ""
}

func (x *Frame) GetJoinType() uint32 {
	if x != nil {
		return x.JoinType
	}
	return 0
}

func (x *Frame) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Frame) GetTargetUid() string {
	if x != nil {
		return x.TargetUid
	}
	return ""
}

func (x *Frame) GetSourceUin() uint32 {
	if x != nil {
		return x.SourceUin
	}
	return 0
}

func (x *Frame) GetSourceUid() string {
	if x != nil {
		return x.SourceUid
	}
	return ""
}

func (x *Frame) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Frame) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Frame) GetAuthorUid() string {
	if x != nil {
		return x.AuthorUid
	}
	return ""
}

func (x *Frame) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Frame) GetRandom() uint32 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *Frame) GetFromUid() string {
	if x != nil {
		return x.FromUid
	}
	return ""
}

func (x *Frame) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Frame) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *Frame) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *Frame) GetUserNick() string {
	if x != nil {
		return x.UserNick
	}
	return ""
}

func (x *Frame) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Frame) GetActionUinNick() string {
	if x != nil {
		return x.ActionUinNick
	}
	return ""
}

func (x *Frame) GetActionUin() int64 {
	if x != nil {
		return x.ActionUin
	}
	return 0
}

func (x *Frame) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *Frame) GetSuspicious() bool {
	if x != nil {
		return x.Suspicious
	}
	return false
}

func (x *Frame) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *Frame) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (m *Frame) GetPbData() isFrame_PbData {
	if m != nil {
		return m.PbData
	}
	return nil
}

func (x *Frame) GetPrivateMessageEvent() *PrivateMessageEvent {
	if x, ok := x.GetPbData().(*Frame_PrivateMessageEvent); ok {
		return x.PrivateMessageEvent
	}
	return nil
}

func (x *Frame) GetGroupMessageEvent() *GroupMessageEvent {
	if x, ok := x.GetPbData().(*Frame_GroupMessageEvent); ok {
		return x.GroupMessageEvent
	}
	return nil
}

func (x *Frame) GetGroupUploadNoticeEvent() *GroupUploadNoticeEvent {
	if x, ok := x.GetPbData().(*Frame_GroupUploadNoticeEvent); ok {
		return x.GroupUploadNoticeEvent
	}
	return nil
}

func (x *Frame) GetGroupAdminNoticeEvent() *GroupAdminNoticeEvent {
	if x, ok := x.GetPbData().(*Frame_GroupAdminNoticeEvent); ok {
		return x.GroupAdminNoticeEvent
	}
	return nil
}

func (x *Frame) GetGroupDecreaseNoticeEvent() *GroupDecreaseNoticeEvent {
	if x, ok := x.GetPbData().(*Frame_GroupDecreaseNoticeEvent); ok {
		return x.GroupDecreaseNoticeEvent
	}
	return nil
}

func (x *Frame) GetGroupIncreaseNoticeEvent() *GroupIncreaseNoticeEvent {
	if x, ok := x.GetPbData().(*Frame_GroupIncreaseNoticeEvent); ok {
		return x.GroupIncreaseNoticeEvent
	}
	return nil
}

func (x *Frame) GetGroupBanNoticeEvent() *GroupBanNoticeEvent {
	if x, ok := x.GetPbData().(*Frame_GroupBanNoticeEvent); ok {
		return x.GroupBanNoticeEvent
	}
	return nil
}

func (x *Frame) GetFriendAddNoticeEvent() *FriendAddNoticeEvent {
	if x, ok := x.GetPbData().(*Frame_FriendAddNoticeEvent); ok {
		return x.FriendAddNoticeEvent
	}
	return nil
}

func (x *Frame) GetGroupRecallNoticeEvent() *GroupRecallNoticeEvent {
	if x, ok := x.GetPbData().(*Frame_GroupRecallNoticeEvent); ok {
		return x.GroupRecallNoticeEvent
	}
	return nil
}

func (x *Frame) GetFriendRecallNoticeEvent() *FriendRecallNoticeEvent {
	if x, ok := x.GetPbData().(*Frame_FriendRecallNoticeEvent); ok {
		return x.FriendRecallNoticeEvent
	}
	return nil
}

func (x *Frame) GetFriendRequestEvent() *FriendRequestEvent {
	if x, ok := x.GetPbData().(*Frame_FriendRequestEvent); ok {
		return x.FriendRequestEvent
	}
	return nil
}

func (x *Frame) GetGroupRequestEvent() *GroupRequestEvent {
	if x, ok := x.GetPbData().(*Frame_GroupRequestEvent); ok {
		return x.GroupRequestEvent
	}
	return nil
}

func (x *Frame) GetGroupTempMessageEvent() *GroupTempMessageEvent {
	if x, ok := x.GetPbData().(*Frame_GroupTempMessageEvent); ok {
		return x.GroupTempMessageEvent
	}
	return nil
}

func (x *Frame) GetGroupNotifyEvent() *GroupNotifyEvent {
	if x, ok := x.GetPbData().(*Frame_GroupNotifyEvent); ok {
		return x.GroupNotifyEvent
	}
	return nil
}

func (x *Frame) GetSendPrivateMsgReq() *SendPrivateMsgReq {
	if x, ok := x.GetPbData().(*Frame_SendPrivateMsgReq); ok {
		return x.SendPrivateMsgReq
	}
	return nil
}

func (x *Frame) GetSendGroupMsgReq() *SendGroupMsgReq {
	if x, ok := x.GetPbData().(*Frame_SendGroupMsgReq); ok {
		return x.SendGroupMsgReq
	}
	return nil
}

func (x *Frame) GetSendMsgReq() *SendMsgReq {
	if x, ok := x.GetPbData().(*Frame_SendMsgReq); ok {
		return x.SendMsgReq
	}
	return nil
}

func (x *Frame) GetDeleteMsgReq() *DeleteMsgReq {
	if x, ok := x.GetPbData().(*Frame_DeleteMsgReq); ok {
		return x.DeleteMsgReq
	}
	return nil
}

func (x *Frame) GetGetMsgReq() *GetMsgReq {
	if x, ok := x.GetPbData().(*Frame_GetMsgReq); ok {
		return x.GetMsgReq
	}
	return nil
}

func (x *Frame) GetGetForwardMsgReq() *GetForwardMsgReq {
	if x, ok := x.GetPbData().(*Frame_GetForwardMsgReq); ok {
		return x.GetForwardMsgReq
	}
	return nil
}

func (x *Frame) GetSendLikeReq() *SendLikeReq {
	if x, ok := x.GetPbData().(*Frame_SendLikeReq); ok {
		return x.SendLikeReq
	}
	return nil
}

func (x *Frame) GetSetGroupKickReq() *SetGroupKickReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupKickReq); ok {
		return x.SetGroupKickReq
	}
	return nil
}

func (x *Frame) GetSetGroupBanReq() *SetGroupBanReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupBanReq); ok {
		return x.SetGroupBanReq
	}
	return nil
}

func (x *Frame) GetSetGroupAnonymousBanReq() *SetGroupAnonymousBanReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupAnonymousBanReq); ok {
		return x.SetGroupAnonymousBanReq
	}
	return nil
}

func (x *Frame) GetSetGroupWholeBanReq() *SetGroupWholeBanReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupWholeBanReq); ok {
		return x.SetGroupWholeBanReq
	}
	return nil
}

func (x *Frame) GetSetGroupAdminReq() *SetGroupAdminReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupAdminReq); ok {
		return x.SetGroupAdminReq
	}
	return nil
}

func (x *Frame) GetSetGroupAnonymousReq() *SetGroupAnonymousReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupAnonymousReq); ok {
		return x.SetGroupAnonymousReq
	}
	return nil
}

func (x *Frame) GetSetGroupCardReq() *SetGroupCardReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupCardReq); ok {
		return x.SetGroupCardReq
	}
	return nil
}

func (x *Frame) GetSetGroupNameReq() *SetGroupNameReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupNameReq); ok {
		return x.SetGroupNameReq
	}
	return nil
}

func (x *Frame) GetSetGroupLeaveReq() *SetGroupLeaveReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupLeaveReq); ok {
		return x.SetGroupLeaveReq
	}
	return nil
}

func (x *Frame) GetSetGroupSpecialTitleReq() *SetGroupSpecialTitleReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupSpecialTitleReq); ok {
		return x.SetGroupSpecialTitleReq
	}
	return nil
}

func (x *Frame) GetSetFriendAddRequestReq() *SetFriendAddRequestReq {
	if x, ok := x.GetPbData().(*Frame_SetFriendAddRequestReq); ok {
		return x.SetFriendAddRequestReq
	}
	return nil
}

func (x *Frame) GetSetGroupAddRequestReq() *SetGroupAddRequestReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupAddRequestReq); ok {
		return x.SetGroupAddRequestReq
	}
	return nil
}

func (x *Frame) GetGetLoginInfoReq() *GetLoginInfoReq {
	if x, ok := x.GetPbData().(*Frame_GetLoginInfoReq); ok {
		return x.GetLoginInfoReq
	}
	return nil
}

func (x *Frame) GetGetStrangerInfoReq() *GetStrangerInfoReq {
	if x, ok := x.GetPbData().(*Frame_GetStrangerInfoReq); ok {
		return x.GetStrangerInfoReq
	}
	return nil
}

func (x *Frame) GetGetFriendListReq() *GetFriendListReq {
	if x, ok := x.GetPbData().(*Frame_GetFriendListReq); ok {
		return x.GetFriendListReq
	}
	return nil
}

func (x *Frame) GetGetGroupInfoReq() *GetGroupInfoReq {
	if x, ok := x.GetPbData().(*Frame_GetGroupInfoReq); ok {
		return x.GetGroupInfoReq
	}
	return nil
}

func (x *Frame) GetGetGroupListReq() *GetGroupListReq {
	if x, ok := x.GetPbData().(*Frame_GetGroupListReq); ok {
		return x.GetGroupListReq
	}
	return nil
}

func (x *Frame) GetGetGroupMemberInfoReq() *GetGroupMemberInfoReq {
	if x, ok := x.GetPbData().(*Frame_GetGroupMemberInfoReq); ok {
		return x.GetGroupMemberInfoReq
	}
	return nil
}

func (x *Frame) GetGetGroupMemberListReq() *GetGroupMemberListReq {
	if x, ok := x.GetPbData().(*Frame_GetGroupMemberListReq); ok {
		return x.GetGroupMemberListReq
	}
	return nil
}

func (x *Frame) GetGetGroupHonorInfoReq() *GetGroupHonorInfoReq {
	if x, ok := x.GetPbData().(*Frame_GetGroupHonorInfoReq); ok {
		return x.GetGroupHonorInfoReq
	}
	return nil
}

func (x *Frame) GetGetCookiesReq() *GetCookiesReq {
	if x, ok := x.GetPbData().(*Frame_GetCookiesReq); ok {
		return x.GetCookiesReq
	}
	return nil
}

func (x *Frame) GetGetCsrfTokenReq() *GetCsrfTokenReq {
	if x, ok := x.GetPbData().(*Frame_GetCsrfTokenReq); ok {
		return x.GetCsrfTokenReq
	}
	return nil
}

func (x *Frame) GetGetCredentialsReq() *GetCredentialsReq {
	if x, ok := x.GetPbData().(*Frame_GetCredentialsReq); ok {
		return x.GetCredentialsReq
	}
	return nil
}

func (x *Frame) GetGetRecordReq() *GetRecordReq {
	if x, ok := x.GetPbData().(*Frame_GetRecordReq); ok {
		return x.GetRecordReq
	}
	return nil
}

func (x *Frame) GetGetImageReq() *GetImageReq {
	if x, ok := x.GetPbData().(*Frame_GetImageReq); ok {
		return x.GetImageReq
	}
	return nil
}

func (x *Frame) GetCanSendImageReq() *CanSendImageReq {
	if x, ok := x.GetPbData().(*Frame_CanSendImageReq); ok {
		return x.CanSendImageReq
	}
	return nil
}

func (x *Frame) GetCanSendRecordReq() *CanSendRecordReq {
	if x, ok := x.GetPbData().(*Frame_CanSendRecordReq); ok {
		return x.CanSendRecordReq
	}
	return nil
}

func (x *Frame) GetGetStatusReq() *GetStatusReq {
	if x, ok := x.GetPbData().(*Frame_GetStatusReq); ok {
		return x.GetStatusReq
	}
	return nil
}

func (x *Frame) GetGetVersionInfoReq() *GetVersionInfoReq {
	if x, ok := x.GetPbData().(*Frame_GetVersionInfoReq); ok {
		return x.GetVersionInfoReq
	}
	return nil
}

func (x *Frame) GetSetRestartReq() *SetRestartReq {
	if x, ok := x.GetPbData().(*Frame_SetRestartReq); ok {
		return x.SetRestartReq
	}
	return nil
}

func (x *Frame) GetCleanCacheReq() *CleanCacheReq {
	if x, ok := x.GetPbData().(*Frame_CleanCacheReq); ok {
		return x.CleanCacheReq
	}
	return nil
}

func (x *Frame) GetSetGroupSignInReq() *SetGroupSignInReq {
	if x, ok := x.GetPbData().(*Frame_SetGroupSignInReq); ok {
		return x.SetGroupSignInReq
	}
	return nil
}

func (x *Frame) GetSendMusicReq() *SendMusicReq {
	if x, ok := x.GetPbData().(*Frame_SendMusicReq); ok {
		return x.SendMusicReq
	}
	return nil
}

func (x *Frame) GetSendGroupPokeReq() *SendGroupPokeReq {
	if x, ok := x.GetPbData().(*Frame_SendGroupPokeReq); ok {
		return x.SendGroupPokeReq
	}
	return nil
}

func (x *Frame) GetSendFriendPokeReq() *SendFriendPokeReq {
	if x, ok := x.GetPbData().(*Frame_SendFriendPokeReq); ok {
		return x.SendFriendPokeReq
	}
	return nil
}

func (x *Frame) GetSendPrivateMsgResp() *SendPrivateMsgResp {
	if x, ok := x.GetPbData().(*Frame_SendPrivateMsgResp); ok {
		return x.SendPrivateMsgResp
	}
	return nil
}

func (x *Frame) GetSendGroupMsgResp() *SendGroupMsgResp {
	if x, ok := x.GetPbData().(*Frame_SendGroupMsgResp); ok {
		return x.SendGroupMsgResp
	}
	return nil
}

func (x *Frame) GetSendMsgResp() *SendMsgResp {
	if x, ok := x.GetPbData().(*Frame_SendMsgResp); ok {
		return x.SendMsgResp
	}
	return nil
}

func (x *Frame) GetDeleteMsgResp() *DeleteMsgResp {
	if x, ok := x.GetPbData().(*Frame_DeleteMsgResp); ok {
		return x.DeleteMsgResp
	}
	return nil
}

func (x *Frame) GetGetMsgResp() *GetMsgResp {
	if x, ok := x.GetPbData().(*Frame_GetMsgResp); ok {
		return x.GetMsgResp
	}
	return nil
}

func (x *Frame) GetGetForwardMsgResp() *GetForwardMsgResp {
	if x, ok := x.GetPbData().(*Frame_GetForwardMsgResp); ok {
		return x.GetForwardMsgResp
	}
	return nil
}

func (x *Frame) GetSendLikeResp() *SendLikeResp {
	if x, ok := x.GetPbData().(*Frame_SendLikeResp); ok {
		return x.SendLikeResp
	}
	return nil
}

func (x *Frame) GetSetGroupKickResp() *SetGroupKickResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupKickResp); ok {
		return x.SetGroupKickResp
	}
	return nil
}

func (x *Frame) GetSetGroupBanResp() *SetGroupBanResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupBanResp); ok {
		return x.SetGroupBanResp
	}
	return nil
}

func (x *Frame) GetSetGroupAnonymousBanResp() *SetGroupAnonymousBanResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupAnonymousBanResp); ok {
		return x.SetGroupAnonymousBanResp
	}
	return nil
}

func (x *Frame) GetSetGroupWholeBanResp() *SetGroupWholeBanResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupWholeBanResp); ok {
		return x.SetGroupWholeBanResp
	}
	return nil
}

func (x *Frame) GetSetGroupAdminResp() *SetGroupAdminResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupAdminResp); ok {
		return x.SetGroupAdminResp
	}
	return nil
}

func (x *Frame) GetSetGroupAnonymousResp() *SetGroupAnonymousResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupAnonymousResp); ok {
		return x.SetGroupAnonymousResp
	}
	return nil
}

func (x *Frame) GetSetGroupCardResp() *SetGroupCardResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupCardResp); ok {
		return x.SetGroupCardResp
	}
	return nil
}

func (x *Frame) GetSetGroupNameResp() *SetGroupNameResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupNameResp); ok {
		return x.SetGroupNameResp
	}
	return nil
}

func (x *Frame) GetSetGroupLeaveResp() *SetGroupLeaveResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupLeaveResp); ok {
		return x.SetGroupLeaveResp
	}
	return nil
}

func (x *Frame) GetSetGroupSpecialTitleResp() *SetGroupSpecialTitleResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupSpecialTitleResp); ok {
		return x.SetGroupSpecialTitleResp
	}
	return nil
}

func (x *Frame) GetSetFriendAddRequestResp() *SetFriendAddRequestResp {
	if x, ok := x.GetPbData().(*Frame_SetFriendAddRequestResp); ok {
		return x.SetFriendAddRequestResp
	}
	return nil
}

func (x *Frame) GetSetGroupAddRequestResp() *SetGroupAddRequestResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupAddRequestResp); ok {
		return x.SetGroupAddRequestResp
	}
	return nil
}

func (x *Frame) GetGetLoginInfoResp() *GetLoginInfoResp {
	if x, ok := x.GetPbData().(*Frame_GetLoginInfoResp); ok {
		return x.GetLoginInfoResp
	}
	return nil
}

func (x *Frame) GetGetStrangerInfoResp() *GetStrangerInfoResp {
	if x, ok := x.GetPbData().(*Frame_GetStrangerInfoResp); ok {
		return x.GetStrangerInfoResp
	}
	return nil
}

func (x *Frame) GetGetFriendListResp() *GetFriendListResp {
	if x, ok := x.GetPbData().(*Frame_GetFriendListResp); ok {
		return x.GetFriendListResp
	}
	return nil
}

func (x *Frame) GetGetGroupInfoResp() *GetGroupInfoResp {
	if x, ok := x.GetPbData().(*Frame_GetGroupInfoResp); ok {
		return x.GetGroupInfoResp
	}
	return nil
}

func (x *Frame) GetGetGroupListResp() *GetGroupListResp {
	if x, ok := x.GetPbData().(*Frame_GetGroupListResp); ok {
		return x.GetGroupListResp
	}
	return nil
}

func (x *Frame) GetGetGroupMemberInfoResp() *GetGroupMemberInfoResp {
	if x, ok := x.GetPbData().(*Frame_GetGroupMemberInfoResp); ok {
		return x.GetGroupMemberInfoResp
	}
	return nil
}

func (x *Frame) GetGetGroupMemberListResp() *GetGroupMemberListResp {
	if x, ok := x.GetPbData().(*Frame_GetGroupMemberListResp); ok {
		return x.GetGroupMemberListResp
	}
	return nil
}

func (x *Frame) GetGetGroupHonorInfoResp() *GetGroupHonorInfoResp {
	if x, ok := x.GetPbData().(*Frame_GetGroupHonorInfoResp); ok {
		return x.GetGroupHonorInfoResp
	}
	return nil
}

func (x *Frame) GetGetCookiesResp() *GetCookiesResp {
	if x, ok := x.GetPbData().(*Frame_GetCookiesResp); ok {
		return x.GetCookiesResp
	}
	return nil
}

func (x *Frame) GetGetCsrfTokenResp() *GetCsrfTokenResp {
	if x, ok := x.GetPbData().(*Frame_GetCsrfTokenResp); ok {
		return x.GetCsrfTokenResp
	}
	return nil
}

func (x *Frame) GetGetCredentialsResp() *GetCredentialsResp {
	if x, ok := x.GetPbData().(*Frame_GetCredentialsResp); ok {
		return x.GetCredentialsResp
	}
	return nil
}

func (x *Frame) GetGetRecordResp() *GetRecordResp {
	if x, ok := x.GetPbData().(*Frame_GetRecordResp); ok {
		return x.GetRecordResp
	}
	return nil
}

func (x *Frame) GetGetImageResp() *GetImageResp {
	if x, ok := x.GetPbData().(*Frame_GetImageResp); ok {
		return x.GetImageResp
	}
	return nil
}

func (x *Frame) GetCanSendImageResp() *CanSendImageResp {
	if x, ok := x.GetPbData().(*Frame_CanSendImageResp); ok {
		return x.CanSendImageResp
	}
	return nil
}

func (x *Frame) GetCanSendRecordResp() *CanSendRecordResp {
	if x, ok := x.GetPbData().(*Frame_CanSendRecordResp); ok {
		return x.CanSendRecordResp
	}
	return nil
}

func (x *Frame) GetGetStatusResp() *GetStatusResp {
	if x, ok := x.GetPbData().(*Frame_GetStatusResp); ok {
		return x.GetStatusResp
	}
	return nil
}

func (x *Frame) GetGetVersionInfoResp() *GetVersionInfoResp {
	if x, ok := x.GetPbData().(*Frame_GetVersionInfoResp); ok {
		return x.GetVersionInfoResp
	}
	return nil
}

func (x *Frame) GetSetRestartResp() *SetRestartResp {
	if x, ok := x.GetPbData().(*Frame_SetRestartResp); ok {
		return x.SetRestartResp
	}
	return nil
}

func (x *Frame) GetCleanCacheResp() *CleanCacheResp {
	if x, ok := x.GetPbData().(*Frame_CleanCacheResp); ok {
		return x.CleanCacheResp
	}
	return nil
}

func (x *Frame) GetSetGroupSignInResp() *SetGroupSignInResp {
	if x, ok := x.GetPbData().(*Frame_SetGroupSignInResp); ok {
		return x.SetGroupSignInResp
	}
	return nil
}

func (x *Frame) GetSendMusicResp() *SendMusicResp {
	if x, ok := x.GetPbData().(*Frame_SendMusicResp); ok {
		return x.SendMusicResp
	}
	return nil
}

func (x *Frame) GetSendGroupPokeResp() *SendGroupPokeResp {
	if x, ok := x.GetPbData().(*Frame_SendGroupPokeResp); ok {
		return x.SendGroupPokeResp
	}
	return nil
}

func (x *Frame) GetSendFriendPokeResp() *SendFriendPokeResp {
	if x, ok := x.GetPbData().(*Frame_SendFriendPokeResp); ok {
		return x.SendFriendPokeResp
	}
	return nil
}

func (x *Frame) GetOSendPrivateMsgResp() *OSendPrivateMsgResp {
	if x, ok := x.GetPbData().(*Frame_OSendPrivateMsgResp); ok {
		return x.OSendPrivateMsgResp
	}
	return nil
}

func (x *Frame) GetOSendGroupMsgResp() *OSendGroupMsgResp {
	if x, ok := x.GetPbData().(*Frame_OSendGroupMsgResp); ok {
		return x.OSendGroupMsgResp
	}
	return nil
}

func (x *Frame) GetOSendMsgResp() *OSendMsgResp {
	if x, ok := x.GetPbData().(*Frame_OSendMsgResp); ok {
		return x.OSendMsgResp
	}
	return nil
}

func (x *Frame) GetODeleteMsgResp() *ODeleteMsgResp {
	if x, ok := x.GetPbData().(*Frame_ODeleteMsgResp); ok {
		return x.ODeleteMsgResp
	}
	return nil
}

func (x *Frame) GetOGetMsgResp() *OGetMsgResp {
	if x, ok := x.GetPbData().(*Frame_OGetMsgResp); ok {
		return x.OGetMsgResp
	}
	return nil
}

func (x *Frame) GetOGetForwardMsgResp() *OGetForwardMsgResp {
	if x, ok := x.GetPbData().(*Frame_OGetForwardMsgResp); ok {
		return x.OGetForwardMsgResp
	}
	return nil
}

func (x *Frame) GetOSendLikeResp() *OSendLikeResp {
	if x, ok := x.GetPbData().(*Frame_OSendLikeResp); ok {
		return x.OSendLikeResp
	}
	return nil
}

func (x *Frame) GetOSetGroupKickResp() *OSetGroupKickResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupKickResp); ok {
		return x.OSetGroupKickResp
	}
	return nil
}

func (x *Frame) GetOSetGroupBanResp() *OSetGroupBanResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupBanResp); ok {
		return x.OSetGroupBanResp
	}
	return nil
}

func (x *Frame) GetOSetGroupAnonymousBanResp() *OSetGroupAnonymousBanResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupAnonymousBanResp); ok {
		return x.OSetGroupAnonymousBanResp
	}
	return nil
}

func (x *Frame) GetOSetGroupWholeBanResp() *OSetGroupWholeBanResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupWholeBanResp); ok {
		return x.OSetGroupWholeBanResp
	}
	return nil
}

func (x *Frame) GetOSetGroupAdminResp() *OSetGroupAdminResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupAdminResp); ok {
		return x.OSetGroupAdminResp
	}
	return nil
}

func (x *Frame) GetOSetGroupAnonymousResp() *OSetGroupAnonymousResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupAnonymousResp); ok {
		return x.OSetGroupAnonymousResp
	}
	return nil
}

func (x *Frame) GetOSetGroupCardResp() *OSetGroupCardResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupCardResp); ok {
		return x.OSetGroupCardResp
	}
	return nil
}

func (x *Frame) GetOSetGroupNameResp() *OSetGroupNameResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupNameResp); ok {
		return x.OSetGroupNameResp
	}
	return nil
}

func (x *Frame) GetOSetGroupLeaveResp() *OSetGroupLeaveResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupLeaveResp); ok {
		return x.OSetGroupLeaveResp
	}
	return nil
}

func (x *Frame) GetOSetGroupSpecialTitleResp() *OSetGroupSpecialTitleResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupSpecialTitleResp); ok {
		return x.OSetGroupSpecialTitleResp
	}
	return nil
}

func (x *Frame) GetOSetFriendAddRequestResp() *OSetFriendAddRequestResp {
	if x, ok := x.GetPbData().(*Frame_OSetFriendAddRequestResp); ok {
		return x.OSetFriendAddRequestResp
	}
	return nil
}

func (x *Frame) GetOSetGroupAddRequestResp() *OSetGroupAddRequestResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupAddRequestResp); ok {
		return x.OSetGroupAddRequestResp
	}
	return nil
}

func (x *Frame) GetOGetLoginInfoResp() *OGetLoginInfoResp {
	if x, ok := x.GetPbData().(*Frame_OGetLoginInfoResp); ok {
		return x.OGetLoginInfoResp
	}
	return nil
}

func (x *Frame) GetOGetStrangerInfoResp() *OGetStrangerInfoResp {
	if x, ok := x.GetPbData().(*Frame_OGetStrangerInfoResp); ok {
		return x.OGetStrangerInfoResp
	}
	return nil
}

func (x *Frame) GetOGetFriendListResp() *OGetFriendListResp {
	if x, ok := x.GetPbData().(*Frame_OGetFriendListResp); ok {
		return x.OGetFriendListResp
	}
	return nil
}

func (x *Frame) GetOGetGroupInfoResp() *OGetGroupInfoResp {
	if x, ok := x.GetPbData().(*Frame_OGetGroupInfoResp); ok {
		return x.OGetGroupInfoResp
	}
	return nil
}

func (x *Frame) GetOGetGroupListResp() *OGetGroupListResp {
	if x, ok := x.GetPbData().(*Frame_OGetGroupListResp); ok {
		return x.OGetGroupListResp
	}
	return nil
}

func (x *Frame) GetOGetGroupMemberInfoResp() *OGetGroupMemberInfoResp {
	if x, ok := x.GetPbData().(*Frame_OGetGroupMemberInfoResp); ok {
		return x.OGetGroupMemberInfoResp
	}
	return nil
}

func (x *Frame) GetOGetGroupMemberListResp() *OGetGroupMemberListResp {
	if x, ok := x.GetPbData().(*Frame_OGetGroupMemberListResp); ok {
		return x.OGetGroupMemberListResp
	}
	return nil
}

func (x *Frame) GetOGetGroupHonorInfoResp() *OGetGroupHonorInfoResp {
	if x, ok := x.GetPbData().(*Frame_OGetGroupHonorInfoResp); ok {
		return x.OGetGroupHonorInfoResp
	}
	return nil
}

func (x *Frame) GetOGetCookiesResp() *OGetCookiesResp {
	if x, ok := x.GetPbData().(*Frame_OGetCookiesResp); ok {
		return x.OGetCookiesResp
	}
	return nil
}

func (x *Frame) GetOGetCsrfTokenResp() *OGetCsrfTokenResp {
	if x, ok := x.GetPbData().(*Frame_OGetCsrfTokenResp); ok {
		return x.OGetCsrfTokenResp
	}
	return nil
}

func (x *Frame) GetOGetCredentialsResp() *OGetCredentialsResp {
	if x, ok := x.GetPbData().(*Frame_OGetCredentialsResp); ok {
		return x.OGetCredentialsResp
	}
	return nil
}

func (x *Frame) GetOGetRecordResp() *OGetRecordResp {
	if x, ok := x.GetPbData().(*Frame_OGetRecordResp); ok {
		return x.OGetRecordResp
	}
	return nil
}

func (x *Frame) GetOGetImageResp() *OGetImageResp {
	if x, ok := x.GetPbData().(*Frame_OGetImageResp); ok {
		return x.OGetImageResp
	}
	return nil
}

func (x *Frame) GetOCanSendImageResp() *OCanSendImageResp {
	if x, ok := x.GetPbData().(*Frame_OCanSendImageResp); ok {
		return x.OCanSendImageResp
	}
	return nil
}

func (x *Frame) GetOCanSendRecordResp() *OCanSendRecordResp {
	if x, ok := x.GetPbData().(*Frame_OCanSendRecordResp); ok {
		return x.OCanSendRecordResp
	}
	return nil
}

func (x *Frame) GetOGetStatusResp() *OGetStatusResp {
	if x, ok := x.GetPbData().(*Frame_OGetStatusResp); ok {
		return x.OGetStatusResp
	}
	return nil
}

func (x *Frame) GetOGetVersionInfoResp() *OGetVersionInfoResp {
	if x, ok := x.GetPbData().(*Frame_OGetVersionInfoResp); ok {
		return x.OGetVersionInfoResp
	}
	return nil
}

func (x *Frame) GetOSetRestartResp() *OSetRestartResp {
	if x, ok := x.GetPbData().(*Frame_OSetRestartResp); ok {
		return x.OSetRestartResp
	}
	return nil
}

func (x *Frame) GetOCleanCacheResp() *OCleanCacheResp {
	if x, ok := x.GetPbData().(*Frame_OCleanCacheResp); ok {
		return x.OCleanCacheResp
	}
	return nil
}

func (x *Frame) GetOSetGroupSignInResp() *OSetGroupSignInResp {
	if x, ok := x.GetPbData().(*Frame_OSetGroupSignInResp); ok {
		return x.OSetGroupSignInResp
	}
	return nil
}

func (x *Frame) GetOSendMusicResp() *OSendMusicResp {
	if x, ok := x.GetPbData().(*Frame_OSendMusicResp); ok {
		return x.OSendMusicResp
	}
	return nil
}

func (x *Frame) GetOSendGroupPokeResp() *OSendGroupPokeResp {
	if x, ok := x.GetPbData().(*Frame_OSendGroupPokeResp); ok {
		return x.OSendGroupPokeResp
	}
	return nil
}

func (x *Frame) GetOSendFriendPokeResp() *OSendFriendPokeResp {
	if x, ok := x.GetPbData().(*Frame_OSendFriendPokeResp); ok {
		return x.OSendFriendPokeResp
	}
	return nil
}

type isFrame_PbData interface {
	isFrame_PbData()
}

type Frame_PrivateMessageEvent struct {
	PrivateMessageEvent *PrivateMessageEvent `protobuf:"bytes,101,opt,name=private_message_event,json=privateMessageEvent,proto3,oneof"`
}

type Frame_GroupMessageEvent struct {
	GroupMessageEvent *GroupMessageEvent `protobuf:"bytes,102,opt,name=group_message_event,json=groupMessageEvent,proto3,oneof"`
}

type Frame_GroupUploadNoticeEvent struct {
	GroupUploadNoticeEvent *GroupUploadNoticeEvent `protobuf:"bytes,103,opt,name=group_upload_notice_event,json=groupUploadNoticeEvent,proto3,oneof"`
}

type Frame_GroupAdminNoticeEvent struct {
	GroupAdminNoticeEvent *GroupAdminNoticeEvent `protobuf:"bytes,104,opt,name=group_admin_notice_event,json=groupAdminNoticeEvent,proto3,oneof"`
}

type Frame_GroupDecreaseNoticeEvent struct {
	GroupDecreaseNoticeEvent *GroupDecreaseNoticeEvent `protobuf:"bytes,105,opt,name=group_decrease_notice_event,json=groupDecreaseNoticeEvent,proto3,oneof"`
}

type Frame_GroupIncreaseNoticeEvent struct {
	GroupIncreaseNoticeEvent *GroupIncreaseNoticeEvent `protobuf:"bytes,106,opt,name=group_increase_notice_event,json=groupIncreaseNoticeEvent,proto3,oneof"`
}

type Frame_GroupBanNoticeEvent struct {
	GroupBanNoticeEvent *GroupBanNoticeEvent `protobuf:"bytes,107,opt,name=group_ban_notice_event,json=groupBanNoticeEvent,proto3,oneof"`
}

type Frame_FriendAddNoticeEvent struct {
	FriendAddNoticeEvent *FriendAddNoticeEvent `protobuf:"bytes,108,opt,name=friend_add_notice_event,json=friendAddNoticeEvent,proto3,oneof"`
}

type Frame_GroupRecallNoticeEvent struct {
	GroupRecallNoticeEvent *GroupRecallNoticeEvent `protobuf:"bytes,109,opt,name=group_recall_notice_event,json=groupRecallNoticeEvent,proto3,oneof"`
}

type Frame_FriendRecallNoticeEvent struct {
	FriendRecallNoticeEvent *FriendRecallNoticeEvent `protobuf:"bytes,110,opt,name=friend_recall_notice_event,json=friendRecallNoticeEvent,proto3,oneof"`
}

type Frame_FriendRequestEvent struct {
	FriendRequestEvent *FriendRequestEvent `protobuf:"bytes,111,opt,name=friend_request_event,json=friendRequestEvent,proto3,oneof"`
}

type Frame_GroupRequestEvent struct {
	GroupRequestEvent *GroupRequestEvent `protobuf:"bytes,112,opt,name=group_request_event,json=groupRequestEvent,proto3,oneof"`
}

type Frame_GroupTempMessageEvent struct {
	GroupTempMessageEvent *GroupTempMessageEvent `protobuf:"bytes,113,opt,name=group_temp_message_event,json=groupTempMessageEvent,proto3,oneof"`
}

type Frame_GroupNotifyEvent struct {
	GroupNotifyEvent *GroupNotifyEvent `protobuf:"bytes,114,opt,name=group_notify_event,json=groupNotifyEvent,proto3,oneof"`
}

type Frame_SendPrivateMsgReq struct {
	SendPrivateMsgReq *SendPrivateMsgReq `protobuf:"bytes,201,opt,name=send_private_msg_req,json=sendPrivateMsgReq,proto3,oneof"`
}

type Frame_SendGroupMsgReq struct {
	SendGroupMsgReq *SendGroupMsgReq `protobuf:"bytes,202,opt,name=send_group_msg_req,json=sendGroupMsgReq,proto3,oneof"`
}

type Frame_SendMsgReq struct {
	SendMsgReq *SendMsgReq `protobuf:"bytes,203,opt,name=send_msg_req,json=sendMsgReq,proto3,oneof"`
}

type Frame_DeleteMsgReq struct {
	DeleteMsgReq *DeleteMsgReq `protobuf:"bytes,204,opt,name=delete_msg_req,json=deleteMsgReq,proto3,oneof"`
}

type Frame_GetMsgReq struct {
	GetMsgReq *GetMsgReq `protobuf:"bytes,205,opt,name=get_msg_req,json=getMsgReq,proto3,oneof"`
}

type Frame_GetForwardMsgReq struct {
	GetForwardMsgReq *GetForwardMsgReq `protobuf:"bytes,206,opt,name=get_forward_msg_req,json=getForwardMsgReq,proto3,oneof"`
}

type Frame_SendLikeReq struct {
	SendLikeReq *SendLikeReq `protobuf:"bytes,207,opt,name=send_like_req,json=sendLikeReq,proto3,oneof"`
}

type Frame_SetGroupKickReq struct {
	SetGroupKickReq *SetGroupKickReq `protobuf:"bytes,208,opt,name=set_group_kick_req,json=setGroupKickReq,proto3,oneof"`
}

type Frame_SetGroupBanReq struct {
	SetGroupBanReq *SetGroupBanReq `protobuf:"bytes,209,opt,name=set_group_ban_req,json=setGroupBanReq,proto3,oneof"`
}

type Frame_SetGroupAnonymousBanReq struct {
	SetGroupAnonymousBanReq *SetGroupAnonymousBanReq `protobuf:"bytes,210,opt,name=set_group_anonymous_ban_req,json=setGroupAnonymousBanReq,proto3,oneof"`
}

type Frame_SetGroupWholeBanReq struct {
	SetGroupWholeBanReq *SetGroupWholeBanReq `protobuf:"bytes,211,opt,name=set_group_whole_ban_req,json=setGroupWholeBanReq,proto3,oneof"`
}

type Frame_SetGroupAdminReq struct {
	SetGroupAdminReq *SetGroupAdminReq `protobuf:"bytes,212,opt,name=set_group_admin_req,json=setGroupAdminReq,proto3,oneof"`
}

type Frame_SetGroupAnonymousReq struct {
	SetGroupAnonymousReq *SetGroupAnonymousReq `protobuf:"bytes,213,opt,name=set_group_anonymous_req,json=setGroupAnonymousReq,proto3,oneof"`
}

type Frame_SetGroupCardReq struct {
	SetGroupCardReq *SetGroupCardReq `protobuf:"bytes,214,opt,name=set_group_card_req,json=setGroupCardReq,proto3,oneof"`
}

type Frame_SetGroupNameReq struct {
	SetGroupNameReq *SetGroupNameReq `protobuf:"bytes,215,opt,name=set_group_name_req,json=setGroupNameReq,proto3,oneof"`
}

type Frame_SetGroupLeaveReq struct {
	SetGroupLeaveReq *SetGroupLeaveReq `protobuf:"bytes,216,opt,name=set_group_leave_req,json=setGroupLeaveReq,proto3,oneof"`
}

type Frame_SetGroupSpecialTitleReq struct {
	SetGroupSpecialTitleReq *SetGroupSpecialTitleReq `protobuf:"bytes,217,opt,name=set_group_special_title_req,json=setGroupSpecialTitleReq,proto3,oneof"`
}

type Frame_SetFriendAddRequestReq struct {
	SetFriendAddRequestReq *SetFriendAddRequestReq `protobuf:"bytes,218,opt,name=set_friend_add_request_req,json=setFriendAddRequestReq,proto3,oneof"`
}

type Frame_SetGroupAddRequestReq struct {
	SetGroupAddRequestReq *SetGroupAddRequestReq `protobuf:"bytes,219,opt,name=set_group_add_request_req,json=setGroupAddRequestReq,proto3,oneof"`
}

type Frame_GetLoginInfoReq struct {
	GetLoginInfoReq *GetLoginInfoReq `protobuf:"bytes,220,opt,name=get_login_info_req,json=getLoginInfoReq,proto3,oneof"`
}

type Frame_GetStrangerInfoReq struct {
	GetStrangerInfoReq *GetStrangerInfoReq `protobuf:"bytes,221,opt,name=get_stranger_info_req,json=getStrangerInfoReq,proto3,oneof"`
}

type Frame_GetFriendListReq struct {
	GetFriendListReq *GetFriendListReq `protobuf:"bytes,222,opt,name=get_friend_list_req,json=getFriendListReq,proto3,oneof"`
}

type Frame_GetGroupInfoReq struct {
	GetGroupInfoReq *GetGroupInfoReq `protobuf:"bytes,223,opt,name=get_group_info_req,json=getGroupInfoReq,proto3,oneof"`
}

type Frame_GetGroupListReq struct {
	GetGroupListReq *GetGroupListReq `protobuf:"bytes,224,opt,name=get_group_list_req,json=getGroupListReq,proto3,oneof"`
}

type Frame_GetGroupMemberInfoReq struct {
	GetGroupMemberInfoReq *GetGroupMemberInfoReq `protobuf:"bytes,225,opt,name=get_group_member_info_req,json=getGroupMemberInfoReq,proto3,oneof"`
}

type Frame_GetGroupMemberListReq struct {
	GetGroupMemberListReq *GetGroupMemberListReq `protobuf:"bytes,226,opt,name=get_group_member_list_req,json=getGroupMemberListReq,proto3,oneof"`
}

type Frame_GetGroupHonorInfoReq struct {
	GetGroupHonorInfoReq *GetGroupHonorInfoReq `protobuf:"bytes,227,opt,name=get_group_honor_info_req,json=getGroupHonorInfoReq,proto3,oneof"`
}

type Frame_GetCookiesReq struct {
	GetCookiesReq *GetCookiesReq `protobuf:"bytes,228,opt,name=get_cookies_req,json=getCookiesReq,proto3,oneof"`
}

type Frame_GetCsrfTokenReq struct {
	GetCsrfTokenReq *GetCsrfTokenReq `protobuf:"bytes,229,opt,name=get_csrf_token_req,json=getCsrfTokenReq,proto3,oneof"`
}

type Frame_GetCredentialsReq struct {
	GetCredentialsReq *GetCredentialsReq `protobuf:"bytes,230,opt,name=get_credentials_req,json=getCredentialsReq,proto3,oneof"`
}

type Frame_GetRecordReq struct {
	GetRecordReq *GetRecordReq `protobuf:"bytes,231,opt,name=get_record_req,json=getRecordReq,proto3,oneof"`
}

type Frame_GetImageReq struct {
	GetImageReq *GetImageReq `protobuf:"bytes,232,opt,name=get_image_req,json=getImageReq,proto3,oneof"`
}

type Frame_CanSendImageReq struct {
	CanSendImageReq *CanSendImageReq `protobuf:"bytes,233,opt,name=can_send_image_req,json=canSendImageReq,proto3,oneof"`
}

type Frame_CanSendRecordReq struct {
	CanSendRecordReq *CanSendRecordReq `protobuf:"bytes,234,opt,name=can_send_record_req,json=canSendRecordReq,proto3,oneof"`
}

type Frame_GetStatusReq struct {
	GetStatusReq *GetStatusReq `protobuf:"bytes,235,opt,name=get_status_req,json=getStatusReq,proto3,oneof"`
}

type Frame_GetVersionInfoReq struct {
	GetVersionInfoReq *GetVersionInfoReq `protobuf:"bytes,236,opt,name=get_version_info_req,json=getVersionInfoReq,proto3,oneof"`
}

type Frame_SetRestartReq struct {
	SetRestartReq *SetRestartReq `protobuf:"bytes,237,opt,name=set_restart_req,json=setRestartReq,proto3,oneof"`
}

type Frame_CleanCacheReq struct {
	CleanCacheReq *CleanCacheReq `protobuf:"bytes,238,opt,name=clean_cache_req,json=cleanCacheReq,proto3,oneof"`
}

type Frame_SetGroupSignInReq struct {
	SetGroupSignInReq *SetGroupSignInReq `protobuf:"bytes,239,opt,name=set_group_sign_in_req,json=setGroupSignInReq,proto3,oneof"`
}

type Frame_SendMusicReq struct {
	SendMusicReq *SendMusicReq `protobuf:"bytes,240,opt,name=send_music_req,json=sendMusicReq,proto3,oneof"`
}

type Frame_SendGroupPokeReq struct {
	SendGroupPokeReq *SendGroupPokeReq `protobuf:"bytes,241,opt,name=send_group_poke_req,json=sendGroupPokeReq,proto3,oneof"`
}

type Frame_SendFriendPokeReq struct {
	SendFriendPokeReq *SendFriendPokeReq `protobuf:"bytes,242,opt,name=send_friend_poke_req,json=sendFriendPokeReq,proto3,oneof"`
}

type Frame_SendPrivateMsgResp struct {
	SendPrivateMsgResp *SendPrivateMsgResp `protobuf:"bytes,301,opt,name=send_private_msg_resp,json=sendPrivateMsgResp,proto3,oneof"`
}

type Frame_SendGroupMsgResp struct {
	SendGroupMsgResp *SendGroupMsgResp `protobuf:"bytes,302,opt,name=send_group_msg_resp,json=sendGroupMsgResp,proto3,oneof"`
}

type Frame_SendMsgResp struct {
	SendMsgResp *SendMsgResp `protobuf:"bytes,303,opt,name=send_msg_resp,json=sendMsgResp,proto3,oneof"`
}

type Frame_DeleteMsgResp struct {
	DeleteMsgResp *DeleteMsgResp `protobuf:"bytes,304,opt,name=delete_msg_resp,json=deleteMsgResp,proto3,oneof"`
}

type Frame_GetMsgResp struct {
	GetMsgResp *GetMsgResp `protobuf:"bytes,305,opt,name=get_msg_resp,json=getMsgResp,proto3,oneof"`
}

type Frame_GetForwardMsgResp struct {
	GetForwardMsgResp *GetForwardMsgResp `protobuf:"bytes,306,opt,name=get_forward_msg_resp,json=getForwardMsgResp,proto3,oneof"`
}

type Frame_SendLikeResp struct {
	SendLikeResp *SendLikeResp `protobuf:"bytes,307,opt,name=send_like_resp,json=sendLikeResp,proto3,oneof"`
}

type Frame_SetGroupKickResp struct {
	SetGroupKickResp *SetGroupKickResp `protobuf:"bytes,308,opt,name=set_group_kick_resp,json=setGroupKickResp,proto3,oneof"`
}

type Frame_SetGroupBanResp struct {
	SetGroupBanResp *SetGroupBanResp `protobuf:"bytes,309,opt,name=set_group_ban_resp,json=setGroupBanResp,proto3,oneof"`
}

type Frame_SetGroupAnonymousBanResp struct {
	SetGroupAnonymousBanResp *SetGroupAnonymousBanResp `protobuf:"bytes,310,opt,name=set_group_anonymous_ban_resp,json=setGroupAnonymousBanResp,proto3,oneof"`
}

type Frame_SetGroupWholeBanResp struct {
	SetGroupWholeBanResp *SetGroupWholeBanResp `protobuf:"bytes,311,opt,name=set_group_whole_ban_resp,json=setGroupWholeBanResp,proto3,oneof"`
}

type Frame_SetGroupAdminResp struct {
	SetGroupAdminResp *SetGroupAdminResp `protobuf:"bytes,312,opt,name=set_group_admin_resp,json=setGroupAdminResp,proto3,oneof"`
}

type Frame_SetGroupAnonymousResp struct {
	SetGroupAnonymousResp *SetGroupAnonymousResp `protobuf:"bytes,313,opt,name=set_group_anonymous_resp,json=setGroupAnonymousResp,proto3,oneof"`
}

type Frame_SetGroupCardResp struct {
	SetGroupCardResp *SetGroupCardResp `protobuf:"bytes,314,opt,name=set_group_card_resp,json=setGroupCardResp,proto3,oneof"`
}

type Frame_SetGroupNameResp struct {
	SetGroupNameResp *SetGroupNameResp `protobuf:"bytes,315,opt,name=set_group_name_resp,json=setGroupNameResp,proto3,oneof"`
}

type Frame_SetGroupLeaveResp struct {
	SetGroupLeaveResp *SetGroupLeaveResp `protobuf:"bytes,316,opt,name=set_group_leave_resp,json=setGroupLeaveResp,proto3,oneof"`
}

type Frame_SetGroupSpecialTitleResp struct {
	SetGroupSpecialTitleResp *SetGroupSpecialTitleResp `protobuf:"bytes,317,opt,name=set_group_special_title_resp,json=setGroupSpecialTitleResp,proto3,oneof"`
}

type Frame_SetFriendAddRequestResp struct {
	SetFriendAddRequestResp *SetFriendAddRequestResp `protobuf:"bytes,318,opt,name=set_friend_add_request_resp,json=setFriendAddRequestResp,proto3,oneof"`
}

type Frame_SetGroupAddRequestResp struct {
	SetGroupAddRequestResp *SetGroupAddRequestResp `protobuf:"bytes,319,opt,name=set_group_add_request_resp,json=setGroupAddRequestResp,proto3,oneof"`
}

type Frame_GetLoginInfoResp struct {
	GetLoginInfoResp *GetLoginInfoResp `protobuf:"bytes,320,opt,name=get_login_info_resp,json=getLoginInfoResp,proto3,oneof"`
}

type Frame_GetStrangerInfoResp struct {
	GetStrangerInfoResp *GetStrangerInfoResp `protobuf:"bytes,321,opt,name=get_stranger_info_resp,json=getStrangerInfoResp,proto3,oneof"`
}

type Frame_GetFriendListResp struct {
	GetFriendListResp *GetFriendListResp `protobuf:"bytes,322,opt,name=get_friend_list_resp,json=getFriendListResp,proto3,oneof"`
}

type Frame_GetGroupInfoResp struct {
	GetGroupInfoResp *GetGroupInfoResp `protobuf:"bytes,323,opt,name=get_group_info_resp,json=getGroupInfoResp,proto3,oneof"`
}

type Frame_GetGroupListResp struct {
	GetGroupListResp *GetGroupListResp `protobuf:"bytes,324,opt,name=get_group_list_resp,json=getGroupListResp,proto3,oneof"`
}

type Frame_GetGroupMemberInfoResp struct {
	GetGroupMemberInfoResp *GetGroupMemberInfoResp `protobuf:"bytes,325,opt,name=get_group_member_info_resp,json=getGroupMemberInfoResp,proto3,oneof"`
}

type Frame_GetGroupMemberListResp struct {
	GetGroupMemberListResp *GetGroupMemberListResp `protobuf:"bytes,326,opt,name=get_group_member_list_resp,json=getGroupMemberListResp,proto3,oneof"`
}

type Frame_GetGroupHonorInfoResp struct {
	GetGroupHonorInfoResp *GetGroupHonorInfoResp `protobuf:"bytes,327,opt,name=get_group_honor_info_resp,json=getGroupHonorInfoResp,proto3,oneof"`
}

type Frame_GetCookiesResp struct {
	GetCookiesResp *GetCookiesResp `protobuf:"bytes,328,opt,name=get_cookies_resp,json=getCookiesResp,proto3,oneof"`
}

type Frame_GetCsrfTokenResp struct {
	GetCsrfTokenResp *GetCsrfTokenResp `protobuf:"bytes,329,opt,name=get_csrf_token_resp,json=getCsrfTokenResp,proto3,oneof"`
}

type Frame_GetCredentialsResp struct {
	GetCredentialsResp *GetCredentialsResp `protobuf:"bytes,330,opt,name=get_credentials_resp,json=getCredentialsResp,proto3,oneof"`
}

type Frame_GetRecordResp struct {
	GetRecordResp *GetRecordResp `protobuf:"bytes,331,opt,name=get_record_resp,json=getRecordResp,proto3,oneof"`
}

type Frame_GetImageResp struct {
	GetImageResp *GetImageResp `protobuf:"bytes,332,opt,name=get_image_resp,json=getImageResp,proto3,oneof"`
}

type Frame_CanSendImageResp struct {
	CanSendImageResp *CanSendImageResp `protobuf:"bytes,333,opt,name=can_send_image_resp,json=canSendImageResp,proto3,oneof"`
}

type Frame_CanSendRecordResp struct {
	CanSendRecordResp *CanSendRecordResp `protobuf:"bytes,334,opt,name=can_send_record_resp,json=canSendRecordResp,proto3,oneof"`
}

type Frame_GetStatusResp struct {
	GetStatusResp *GetStatusResp `protobuf:"bytes,335,opt,name=get_status_resp,json=getStatusResp,proto3,oneof"`
}

type Frame_GetVersionInfoResp struct {
	GetVersionInfoResp *GetVersionInfoResp `protobuf:"bytes,336,opt,name=get_version_info_resp,json=getVersionInfoResp,proto3,oneof"`
}

type Frame_SetRestartResp struct {
	SetRestartResp *SetRestartResp `protobuf:"bytes,337,opt,name=set_restart_resp,json=setRestartResp,proto3,oneof"`
}

type Frame_CleanCacheResp struct {
	CleanCacheResp *CleanCacheResp `protobuf:"bytes,338,opt,name=clean_cache_resp,json=cleanCacheResp,proto3,oneof"`
}

type Frame_SetGroupSignInResp struct {
	SetGroupSignInResp *SetGroupSignInResp `protobuf:"bytes,339,opt,name=set_group_sign_in_resp,json=setGroupSignInResp,proto3,oneof"`
}

type Frame_SendMusicResp struct {
	SendMusicResp *SendMusicResp `protobuf:"bytes,340,opt,name=send_music_resp,json=sendMusicResp,proto3,oneof"`
}

type Frame_SendGroupPokeResp struct {
	SendGroupPokeResp *SendGroupPokeResp `protobuf:"bytes,341,opt,name=send_group_poke_resp,json=sendGroupPokeResp,proto3,oneof"`
}

type Frame_SendFriendPokeResp struct {
	SendFriendPokeResp *SendFriendPokeResp `protobuf:"bytes,342,opt,name=send_friend_poke_resp,json=sendFriendPokeResp,proto3,oneof"`
}

type Frame_OSendPrivateMsgResp struct {
	OSendPrivateMsgResp *OSendPrivateMsgResp `protobuf:"bytes,401,opt,name=o_send_private_msg_resp,json=oSendPrivateMsgResp,proto3,oneof"`
}

type Frame_OSendGroupMsgResp struct {
	OSendGroupMsgResp *OSendGroupMsgResp `protobuf:"bytes,402,opt,name=o_send_group_msg_resp,json=oSendGroupMsgResp,proto3,oneof"`
}

type Frame_OSendMsgResp struct {
	OSendMsgResp *OSendMsgResp `protobuf:"bytes,403,opt,name=o_send_msg_resp,json=oSendMsgResp,proto3,oneof"`
}

type Frame_ODeleteMsgResp struct {
	ODeleteMsgResp *ODeleteMsgResp `protobuf:"bytes,404,opt,name=o_delete_msg_resp,json=oDeleteMsgResp,proto3,oneof"`
}

type Frame_OGetMsgResp struct {
	OGetMsgResp *OGetMsgResp `protobuf:"bytes,405,opt,name=o_get_msg_resp,json=oGetMsgResp,proto3,oneof"`
}

type Frame_OGetForwardMsgResp struct {
	OGetForwardMsgResp *OGetForwardMsgResp `protobuf:"bytes,406,opt,name=o_get_forward_msg_resp,json=oGetForwardMsgResp,proto3,oneof"`
}

type Frame_OSendLikeResp struct {
	OSendLikeResp *OSendLikeResp `protobuf:"bytes,407,opt,name=o_send_like_resp,json=oSendLikeResp,proto3,oneof"`
}

type Frame_OSetGroupKickResp struct {
	OSetGroupKickResp *OSetGroupKickResp `protobuf:"bytes,408,opt,name=o_set_group_kick_resp,json=oSetGroupKickResp,proto3,oneof"`
}

type Frame_OSetGroupBanResp struct {
	OSetGroupBanResp *OSetGroupBanResp `protobuf:"bytes,409,opt,name=o_set_group_ban_resp,json=oSetGroupBanResp,proto3,oneof"`
}

type Frame_OSetGroupAnonymousBanResp struct {
	OSetGroupAnonymousBanResp *OSetGroupAnonymousBanResp `protobuf:"bytes,410,opt,name=o_set_group_anonymous_ban_resp,json=oSetGroupAnonymousBanResp,proto3,oneof"`
}

type Frame_OSetGroupWholeBanResp struct {
	OSetGroupWholeBanResp *OSetGroupWholeBanResp `protobuf:"bytes,411,opt,name=o_set_group_whole_ban_resp,json=oSetGroupWholeBanResp,proto3,oneof"`
}

type Frame_OSetGroupAdminResp struct {
	OSetGroupAdminResp *OSetGroupAdminResp `protobuf:"bytes,412,opt,name=o_set_group_admin_resp,json=oSetGroupAdminResp,proto3,oneof"`
}

type Frame_OSetGroupAnonymousResp struct {
	OSetGroupAnonymousResp *OSetGroupAnonymousResp `protobuf:"bytes,413,opt,name=o_set_group_anonymous_resp,json=oSetGroupAnonymousResp,proto3,oneof"`
}

type Frame_OSetGroupCardResp struct {
	OSetGroupCardResp *OSetGroupCardResp `protobuf:"bytes,414,opt,name=o_set_group_card_resp,json=oSetGroupCardResp,proto3,oneof"`
}

type Frame_OSetGroupNameResp struct {
	OSetGroupNameResp *OSetGroupNameResp `protobuf:"bytes,415,opt,name=o_set_group_name_resp,json=oSetGroupNameResp,proto3,oneof"`
}

type Frame_OSetGroupLeaveResp struct {
	OSetGroupLeaveResp *OSetGroupLeaveResp `protobuf:"bytes,416,opt,name=o_set_group_leave_resp,json=oSetGroupLeaveResp,proto3,oneof"`
}

type Frame_OSetGroupSpecialTitleResp struct {
	OSetGroupSpecialTitleResp *OSetGroupSpecialTitleResp `protobuf:"bytes,417,opt,name=o_set_group_special_title_resp,json=oSetGroupSpecialTitleResp,proto3,oneof"`
}

type Frame_OSetFriendAddRequestResp struct {
	OSetFriendAddRequestResp *OSetFriendAddRequestResp `protobuf:"bytes,418,opt,name=o_set_friend_add_request_resp,json=oSetFriendAddRequestResp,proto3,oneof"`
}

type Frame_OSetGroupAddRequestResp struct {
	OSetGroupAddRequestResp *OSetGroupAddRequestResp `protobuf:"bytes,419,opt,name=o_set_group_add_request_resp,json=oSetGroupAddRequestResp,proto3,oneof"`
}

type Frame_OGetLoginInfoResp struct {
	OGetLoginInfoResp *OGetLoginInfoResp `protobuf:"bytes,420,opt,name=o_get_login_info_resp,json=oGetLoginInfoResp,proto3,oneof"`
}

type Frame_OGetStrangerInfoResp struct {
	OGetStrangerInfoResp *OGetStrangerInfoResp `protobuf:"bytes,421,opt,name=o_get_stranger_info_resp,json=oGetStrangerInfoResp,proto3,oneof"`
}

type Frame_OGetFriendListResp struct {
	OGetFriendListResp *OGetFriendListResp `protobuf:"bytes,422,opt,name=o_get_friend_list_resp,json=oGetFriendListResp,proto3,oneof"`
}

type Frame_OGetGroupInfoResp struct {
	OGetGroupInfoResp *OGetGroupInfoResp `protobuf:"bytes,423,opt,name=o_get_group_info_resp,json=oGetGroupInfoResp,proto3,oneof"`
}

type Frame_OGetGroupListResp struct {
	OGetGroupListResp *OGetGroupListResp `protobuf:"bytes,424,opt,name=o_get_group_list_resp,json=oGetGroupListResp,proto3,oneof"`
}

type Frame_OGetGroupMemberInfoResp struct {
	OGetGroupMemberInfoResp *OGetGroupMemberInfoResp `protobuf:"bytes,425,opt,name=o_get_group_member_info_resp,json=oGetGroupMemberInfoResp,proto3,oneof"`
}

type Frame_OGetGroupMemberListResp struct {
	OGetGroupMemberListResp *OGetGroupMemberListResp `protobuf:"bytes,426,opt,name=o_get_group_member_list_resp,json=oGetGroupMemberListResp,proto3,oneof"`
}

type Frame_OGetGroupHonorInfoResp struct {
	OGetGroupHonorInfoResp *OGetGroupHonorInfoResp `protobuf:"bytes,427,opt,name=o_get_group_honor_info_resp,json=oGetGroupHonorInfoResp,proto3,oneof"`
}

type Frame_OGetCookiesResp struct {
	OGetCookiesResp *OGetCookiesResp `protobuf:"bytes,428,opt,name=o_get_cookies_resp,json=oGetCookiesResp,proto3,oneof"`
}

type Frame_OGetCsrfTokenResp struct {
	OGetCsrfTokenResp *OGetCsrfTokenResp `protobuf:"bytes,429,opt,name=o_get_csrf_token_resp,json=oGetCsrfTokenResp,proto3,oneof"`
}

type Frame_OGetCredentialsResp struct {
	OGetCredentialsResp *OGetCredentialsResp `protobuf:"bytes,430,opt,name=o_get_credentials_resp,json=oGetCredentialsResp,proto3,oneof"`
}

type Frame_OGetRecordResp struct {
	OGetRecordResp *OGetRecordResp `protobuf:"bytes,431,opt,name=o_get_record_resp,json=oGetRecordResp,proto3,oneof"`
}

type Frame_OGetImageResp struct {
	OGetImageResp *OGetImageResp `protobuf:"bytes,432,opt,name=o_get_image_resp,json=oGetImageResp,proto3,oneof"`
}

type Frame_OCanSendImageResp struct {
	OCanSendImageResp *OCanSendImageResp `protobuf:"bytes,433,opt,name=o_can_send_image_resp,json=oCanSendImageResp,proto3,oneof"`
}

type Frame_OCanSendRecordResp struct {
	OCanSendRecordResp *OCanSendRecordResp `protobuf:"bytes,434,opt,name=o_can_send_record_resp,json=oCanSendRecordResp,proto3,oneof"`
}

type Frame_OGetStatusResp struct {
	OGetStatusResp *OGetStatusResp `protobuf:"bytes,435,opt,name=o_get_status_resp,json=oGetStatusResp,proto3,oneof"`
}

type Frame_OGetVersionInfoResp struct {
	OGetVersionInfoResp *OGetVersionInfoResp `protobuf:"bytes,436,opt,name=o_get_version_info_resp,json=oGetVersionInfoResp,proto3,oneof"`
}

type Frame_OSetRestartResp struct {
	OSetRestartResp *OSetRestartResp `protobuf:"bytes,437,opt,name=o_set_restart_resp,json=oSetRestartResp,proto3,oneof"`
}

type Frame_OCleanCacheResp struct {
	OCleanCacheResp *OCleanCacheResp `protobuf:"bytes,438,opt,name=o_clean_cache_resp,json=oCleanCacheResp,proto3,oneof"`
}

type Frame_OSetGroupSignInResp struct {
	OSetGroupSignInResp *OSetGroupSignInResp `protobuf:"bytes,439,opt,name=o_set_group_sign_in_resp,json=oSetGroupSignInResp,proto3,oneof"`
}

type Frame_OSendMusicResp struct {
	OSendMusicResp *OSendMusicResp `protobuf:"bytes,440,opt,name=o_send_music_resp,json=oSendMusicResp,proto3,oneof"`
}

type Frame_OSendGroupPokeResp struct {
	OSendGroupPokeResp *OSendGroupPokeResp `protobuf:"bytes,441,opt,name=o_send_group_poke_resp,json=oSendGroupPokeResp,proto3,oneof"`
}

type Frame_OSendFriendPokeResp struct {
	OSendFriendPokeResp *OSendFriendPokeResp `protobuf:"bytes,442,opt,name=o_send_friend_poke_resp,json=oSendFriendPokeResp,proto3,oneof"`
}

func (*Frame_PrivateMessageEvent) isFrame_PbData() {}

func (*Frame_GroupMessageEvent) isFrame_PbData() {}

func (*Frame_GroupUploadNoticeEvent) isFrame_PbData() {}

func (*Frame_GroupAdminNoticeEvent) isFrame_PbData() {}

func (*Frame_GroupDecreaseNoticeEvent) isFrame_PbData() {}

func (*Frame_GroupIncreaseNoticeEvent) isFrame_PbData() {}

func (*Frame_GroupBanNoticeEvent) isFrame_PbData() {}

func (*Frame_FriendAddNoticeEvent) isFrame_PbData() {}

func (*Frame_GroupRecallNoticeEvent) isFrame_PbData() {}

func (*Frame_FriendRecallNoticeEvent) isFrame_PbData() {}

func (*Frame_FriendRequestEvent) isFrame_PbData() {}

func (*Frame_GroupRequestEvent) isFrame_PbData() {}

func (*Frame_GroupTempMessageEvent) isFrame_PbData() {}

func (*Frame_GroupNotifyEvent) isFrame_PbData() {}

func (*Frame_SendPrivateMsgReq) isFrame_PbData() {}

func (*Frame_SendGroupMsgReq) isFrame_PbData() {}

func (*Frame_SendMsgReq) isFrame_PbData() {}

func (*Frame_DeleteMsgReq) isFrame_PbData() {}

func (*Frame_GetMsgReq) isFrame_PbData() {}

func (*Frame_GetForwardMsgReq) isFrame_PbData() {}

func (*Frame_SendLikeReq) isFrame_PbData() {}

func (*Frame_SetGroupKickReq) isFrame_PbData() {}

func (*Frame_SetGroupBanReq) isFrame_PbData() {}

func (*Frame_SetGroupAnonymousBanReq) isFrame_PbData() {}

func (*Frame_SetGroupWholeBanReq) isFrame_PbData() {}

func (*Frame_SetGroupAdminReq) isFrame_PbData() {}

func (*Frame_SetGroupAnonymousReq) isFrame_PbData() {}

func (*Frame_SetGroupCardReq) isFrame_PbData() {}

func (*Frame_SetGroupNameReq) isFrame_PbData() {}

func (*Frame_SetGroupLeaveReq) isFrame_PbData() {}

func (*Frame_SetGroupSpecialTitleReq) isFrame_PbData() {}

func (*Frame_SetFriendAddRequestReq) isFrame_PbData() {}

func (*Frame_SetGroupAddRequestReq) isFrame_PbData() {}

func (*Frame_GetLoginInfoReq) isFrame_PbData() {}

func (*Frame_GetStrangerInfoReq) isFrame_PbData() {}

func (*Frame_GetFriendListReq) isFrame_PbData() {}

func (*Frame_GetGroupInfoReq) isFrame_PbData() {}

func (*Frame_GetGroupListReq) isFrame_PbData() {}

func (*Frame_GetGroupMemberInfoReq) isFrame_PbData() {}

func (*Frame_GetGroupMemberListReq) isFrame_PbData() {}

func (*Frame_GetGroupHonorInfoReq) isFrame_PbData() {}

func (*Frame_GetCookiesReq) isFrame_PbData() {}

func (*Frame_GetCsrfTokenReq) isFrame_PbData() {}

func (*Frame_GetCredentialsReq) isFrame_PbData() {}

func (*Frame_GetRecordReq) isFrame_PbData() {}

func (*Frame_GetImageReq) isFrame_PbData() {}

func (*Frame_CanSendImageReq) isFrame_PbData() {}

func (*Frame_CanSendRecordReq) isFrame_PbData() {}

func (*Frame_GetStatusReq) isFrame_PbData() {}

func (*Frame_GetVersionInfoReq) isFrame_PbData() {}

func (*Frame_SetRestartReq) isFrame_PbData() {}

func (*Frame_CleanCacheReq) isFrame_PbData() {}

func (*Frame_SetGroupSignInReq) isFrame_PbData() {}

func (*Frame_SendMusicReq) isFrame_PbData() {}

func (*Frame_SendGroupPokeReq) isFrame_PbData() {}

func (*Frame_SendFriendPokeReq) isFrame_PbData() {}

func (*Frame_SendPrivateMsgResp) isFrame_PbData() {}

func (*Frame_SendGroupMsgResp) isFrame_PbData() {}

func (*Frame_SendMsgResp) isFrame_PbData() {}

func (*Frame_DeleteMsgResp) isFrame_PbData() {}

func (*Frame_GetMsgResp) isFrame_PbData() {}

func (*Frame_GetForwardMsgResp) isFrame_PbData() {}

func (*Frame_SendLikeResp) isFrame_PbData() {}

func (*Frame_SetGroupKickResp) isFrame_PbData() {}

func (*Frame_SetGroupBanResp) isFrame_PbData() {}

func (*Frame_SetGroupAnonymousBanResp) isFrame_PbData() {}

func (*Frame_SetGroupWholeBanResp) isFrame_PbData() {}

func (*Frame_SetGroupAdminResp) isFrame_PbData() {}

func (*Frame_SetGroupAnonymousResp) isFrame_PbData() {}

func (*Frame_SetGroupCardResp) isFrame_PbData() {}

func (*Frame_SetGroupNameResp) isFrame_PbData() {}

func (*Frame_SetGroupLeaveResp) isFrame_PbData() {}

func (*Frame_SetGroupSpecialTitleResp) isFrame_PbData() {}

func (*Frame_SetFriendAddRequestResp) isFrame_PbData() {}

func (*Frame_SetGroupAddRequestResp) isFrame_PbData() {}

func (*Frame_GetLoginInfoResp) isFrame_PbData() {}

func (*Frame_GetStrangerInfoResp) isFrame_PbData() {}

func (*Frame_GetFriendListResp) isFrame_PbData() {}

func (*Frame_GetGroupInfoResp) isFrame_PbData() {}

func (*Frame_GetGroupListResp) isFrame_PbData() {}

func (*Frame_GetGroupMemberInfoResp) isFrame_PbData() {}

func (*Frame_GetGroupMemberListResp) isFrame_PbData() {}

func (*Frame_GetGroupHonorInfoResp) isFrame_PbData() {}

func (*Frame_GetCookiesResp) isFrame_PbData() {}

func (*Frame_GetCsrfTokenResp) isFrame_PbData() {}

func (*Frame_GetCredentialsResp) isFrame_PbData() {}

func (*Frame_GetRecordResp) isFrame_PbData() {}

func (*Frame_GetImageResp) isFrame_PbData() {}

func (*Frame_CanSendImageResp) isFrame_PbData() {}

func (*Frame_CanSendRecordResp) isFrame_PbData() {}

func (*Frame_GetStatusResp) isFrame_PbData() {}

func (*Frame_GetVersionInfoResp) isFrame_PbData() {}

func (*Frame_SetRestartResp) isFrame_PbData() {}

func (*Frame_CleanCacheResp) isFrame_PbData() {}

func (*Frame_SetGroupSignInResp) isFrame_PbData() {}

func (*Frame_SendMusicResp) isFrame_PbData() {}

func (*Frame_SendGroupPokeResp) isFrame_PbData() {}

func (*Frame_SendFriendPokeResp) isFrame_PbData() {}

func (*Frame_OSendPrivateMsgResp) isFrame_PbData() {}

func (*Frame_OSendGroupMsgResp) isFrame_PbData() {}

func (*Frame_OSendMsgResp) isFrame_PbData() {}

func (*Frame_ODeleteMsgResp) isFrame_PbData() {}

func (*Frame_OGetMsgResp) isFrame_PbData() {}

func (*Frame_OGetForwardMsgResp) isFrame_PbData() {}

func (*Frame_OSendLikeResp) isFrame_PbData() {}

func (*Frame_OSetGroupKickResp) isFrame_PbData() {}

func (*Frame_OSetGroupBanResp) isFrame_PbData() {}

func (*Frame_OSetGroupAnonymousBanResp) isFrame_PbData() {}

func (*Frame_OSetGroupWholeBanResp) isFrame_PbData() {}

func (*Frame_OSetGroupAdminResp) isFrame_PbData() {}

func (*Frame_OSetGroupAnonymousResp) isFrame_PbData() {}

func (*Frame_OSetGroupCardResp) isFrame_PbData() {}

func (*Frame_OSetGroupNameResp) isFrame_PbData() {}

func (*Frame_OSetGroupLeaveResp) isFrame_PbData() {}

func (*Frame_OSetGroupSpecialTitleResp) isFrame_PbData() {}

func (*Frame_OSetFriendAddRequestResp) isFrame_PbData() {}

func (*Frame_OSetGroupAddRequestResp) isFrame_PbData() {}

func (*Frame_OGetLoginInfoResp) isFrame_PbData() {}

func (*Frame_OGetStrangerInfoResp) isFrame_PbData() {}

func (*Frame_OGetFriendListResp) isFrame_PbData() {}

func (*Frame_OGetGroupInfoResp) isFrame_PbData() {}

func (*Frame_OGetGroupListResp) isFrame_PbData() {}

func (*Frame_OGetGroupMemberInfoResp) isFrame_PbData() {}

func (*Frame_OGetGroupMemberListResp) isFrame_PbData() {}

func (*Frame_OGetGroupHonorInfoResp) isFrame_PbData() {}

func (*Frame_OGetCookiesResp) isFrame_PbData() {}

func (*Frame_OGetCsrfTokenResp) isFrame_PbData() {}

func (*Frame_OGetCredentialsResp) isFrame_PbData() {}

func (*Frame_OGetRecordResp) isFrame_PbData() {}

func (*Frame_OGetImageResp) isFrame_PbData() {}

func (*Frame_OCanSendImageResp) isFrame_PbData() {}

func (*Frame_OCanSendRecordResp) isFrame_PbData() {}

func (*Frame_OGetStatusResp) isFrame_PbData() {}

func (*Frame_OGetVersionInfoResp) isFrame_PbData() {}

func (*Frame_OSetRestartResp) isFrame_PbData() {}

func (*Frame_OCleanCacheResp) isFrame_PbData() {}

func (*Frame_OSetGroupSignInResp) isFrame_PbData() {}

func (*Frame_OSendMusicResp) isFrame_PbData() {}

func (*Frame_OSendGroupPokeResp) isFrame_PbData() {}

func (*Frame_OSendFriendPokeResp) isFrame_PbData() {}

type Frame_Anonymous struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Flag string `protobuf:"bytes,3,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *Frame_Anonymous) Reset() {
	*x = Frame_Anonymous{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_frame_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame_Anonymous) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame_Anonymous) ProtoMessage() {}

func (x *Frame_Anonymous) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_frame_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame_Anonymous.ProtoReflect.Descriptor instead.
func (*Frame_Anonymous) Descriptor() ([]byte, []int) {
	return file_onebot_frame_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Frame_Anonymous) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Frame_Anonymous) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Frame_Anonymous) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

type Frame_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size  int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Busid int64  `protobuf:"varint,4,opt,name=busid,proto3" json:"busid,omitempty"`
	Url   string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Frame_File) Reset() {
	*x = Frame_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_frame_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame_File) ProtoMessage() {}

func (x *Frame_File) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_frame_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame_File.ProtoReflect.Descriptor instead.
func (*Frame_File) Descriptor() ([]byte, []int) {
	return file_onebot_frame_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Frame_File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Frame_File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Frame_File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Frame_File) GetBusid() int64 {
	if x != nil {
		return x.Busid
	}
	return 0
}

func (x *Frame_File) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Frame_Sender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Card     string `protobuf:"bytes,3,opt,name=card,proto3" json:"card,omitempty"`
	Sex      string `protobuf:"bytes,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Age      int32  `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`
	Area     string `protobuf:"bytes,6,opt,name=area,proto3" json:"area,omitempty"`
	Level    string `protobuf:"bytes,7,opt,name=level,proto3" json:"level,omitempty"`
	Role     string `protobuf:"bytes,8,opt,name=role,proto3" json:"role,omitempty"`
	Title    string `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Frame_Sender) Reset() {
	*x = Frame_Sender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_frame_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame_Sender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame_Sender) ProtoMessage() {}

func (x *Frame_Sender) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_frame_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame_Sender.ProtoReflect.Descriptor instead.
func (*Frame_Sender) Descriptor() ([]byte, []int) {
	return file_onebot_frame_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Frame_Sender) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Frame_Sender) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Frame_Sender) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

func (x *Frame_Sender) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *Frame_Sender) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Frame_Sender) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *Frame_Sender) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Frame_Sender) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Frame_Sender) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

var File_onebot_frame_proto protoreflect.FileDescriptor

var file_onebot_frame_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x1a, 0x11, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x10, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x92, 0x84, 0x01, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x62,
	0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6f, 0x74,
	0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x63,
	0x68, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x26,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x77,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6f,
	0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x09,
	0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x41,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6a,
	0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x30, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x31, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x33, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x69, 0x6e, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x34,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x6e, 0x4e,
	0x69, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x35, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x36, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x73, 0x70,
	0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x37, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75,
	0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x12, 0x2e, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x12, 0x51, 0x0a, 0x15, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x13,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x5b, 0x0a, 0x19, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x16, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x58, 0x0a,
	0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x61, 0x0a, 0x1b, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x64, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x61, 0x0a, 0x1b, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a,
	0x16, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x13, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x55, 0x0a, 0x17, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x6c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x14, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x19, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x16, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x1a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f,
	0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x17, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x6f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x12, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x70, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x58, 0x0a, 0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x71,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x6d, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x12,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xc9,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xca, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x73,
	0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x37,
	0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xcb,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6e,
	0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xcd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x09, 0x67, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x13,
	0x67, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0xce, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xcf, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xd0, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x44, 0x0a,
	0x11, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0xd1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x60, 0x0a, 0x1b, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x17, 0x73, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x54, 0x0a, 0x17, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0xd3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x13, 0x73,
	0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0xd4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x56, 0x0a, 0x17, 0x73, 0x65, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0xd5, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x47, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xd6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xd7,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0f, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xd8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x60, 0x0a,
	0x1b, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xd9, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x17, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x5d, 0x0a, 0x1a, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x64,
	0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xda, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x5a,
	0x0a, 0x19, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xdb, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x67, 0x65,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0xdc, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x50, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xdd, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xde, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x10, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x47, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xdf, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x67, 0x65,
	0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0xe0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x5a, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0xe1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x5a, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe2, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x57, 0x0a, 0x18, 0x67,
	0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x14,
	0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x73,
	0x72, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe5, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f,
	0x67, 0x65, 0x74, 0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x4c, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a,
	0x0e, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18,
	0xe7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0d,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe8, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe9,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x43,
	0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0f, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x4a, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xea, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x63, 0x61, 0x6e,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a,
	0x0e, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x18,
	0xeb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c,
	0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x4d, 0x0a, 0x14,
	0x67, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0xec, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x0f, 0x73,
	0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xed,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a,
	0x0f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0xee, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x4e, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xef, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x3d, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0xf0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x4a,
	0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x6f, 0x6b,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xf1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4d, 0x0a, 0x14, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x6b, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0xf2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xaf, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb0, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb1, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d,
	0x0a, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb2, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a,
	0x0e, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0xb3, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0c,
	0x73, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13,
	0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x18, 0xb4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb5,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x0f, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x63, 0x0a, 0x1c, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x18, 0xb6, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x18, 0x73, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x18, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0xb7, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65,
	0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4d, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb8, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59,
	0x0a, 0x18, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x6e, 0x6f, 0x6e,
	0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb9, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e,
	0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x65, 0x74,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0xba, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xbb, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x10, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4d, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xbc, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x73,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x63, 0x0a, 0x1c, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0xbd, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x18, 0x73, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x1b, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0xbe, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17,
	0x73, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x1a, 0x73, 0x65, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xbf, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x16,
	0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc0, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x10, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x53, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc1, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0xc2, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc3, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x10, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc4, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d,
	0x0a, 0x1a, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc5, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x16, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a,
	0x1a, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc6, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x16, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x19,
	0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc7, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x5f,
	0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc8, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x67,
	0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a,
	0x13, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x73, 0x72, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0xc9, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x43, 0x73, 0x72, 0x66,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x14, 0x67, 0x65, 0x74,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x18, 0xca, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0f, 0x67, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xcb, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0e,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xcc,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0c, 0x67,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x63,
	0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0xcd, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x14, 0x63, 0x61, 0x6e, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0xce, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xcf, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x18, 0xd0, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x10, 0x73, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xd1,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x0e, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x43, 0x0a, 0x10, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x18, 0xd2, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x16, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xd3,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xd4, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x14, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x6f, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x18, 0xd5, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x6b, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x18, 0xd6, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x17, 0x6f, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x91, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x13, 0x6f, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4e, 0x0a, 0x15, 0x6f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x92, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x6f,
	0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3e, 0x0a, 0x0f, 0x6f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x18, 0x93, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x0c, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x44, 0x0a, 0x11, 0x6f, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x94, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0e, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x95, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x16, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x96, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x12, 0x6f, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x10, 0x6f, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x97, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x53, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x15, 0x6f, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0x98, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x6f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x14, 0x6f, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x18, 0x99, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x6f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x1e, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f,
	0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x9a, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x19, 0x6f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5b, 0x0a, 0x1a, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x77,
	0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x9b, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x15, 0x6f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x16,
	0x6f, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x9c, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x6f, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5d, 0x0a, 0x1a, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x9d, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x16, 0x6f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x15, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x9e, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x6f, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x15, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x9f, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x6f, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51,
	0x0a, 0x16, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x65,
	0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xa0, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x6f,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x67, 0x0a, 0x1e, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x18, 0xa1, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x19, 0x6f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x1d, 0x6f, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xa2, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x18, 0x6f, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x61, 0x0a, 0x1c, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0xa3, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17, 0x6f, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x15, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xa4, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x11, 0x6f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x18, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0xa5, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x4f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x14, 0x6f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x16,
	0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xa6, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x6f, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4e, 0x0a, 0x15, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xa7, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x6f, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4e, 0x0a, 0x15, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xa8, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x6f, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x61, 0x0a, 0x1c, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0xa9, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x4f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17, 0x6f, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x61, 0x0a, 0x1c, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0xaa, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17, 0x6f, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x1b, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0xab, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f,
	0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x16, 0x6f,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x12, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x63,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xac, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x6f,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x15, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x73, 0x72, 0x66, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xad, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65, 0x74, 0x43, 0x73, 0x72, 0x66,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x6f, 0x47, 0x65,
	0x74, 0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53,
	0x0a, 0x16, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xae, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x13,
	0x6f, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x11, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xaf, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x10, 0x6f, 0x5f, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb0, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x6f,
	0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x15,
	0x6f, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb1, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x6f, 0x43, 0x61, 0x6e, 0x53,
	0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x16,
	0x6f, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb2, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x6f, 0x43, 0x61,
	0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x44, 0x0a, 0x11, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0xb3, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x17, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0xb4, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x4f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x13, 0x6f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x12, 0x6f,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x18, 0xb5, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x4f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x12, 0x6f, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb6, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a,
	0x18, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb7, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x13, 0x6f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x11, 0x6f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb8, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x16, 0x6f, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x6f, 0x6b, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0xb9, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x6f, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a,
	0x17, 0x6f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70,
	0x6f, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xba, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4f, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x13,
	0x6f, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6b, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x1a, 0x43, 0x0a, 0x09, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x1a, 0x66, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x73, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x75, 0x73, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x1a, 0xc9, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0x38, 0x0a, 0x0a,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd2, 0x1b, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x65, 0x12, 0x16, 0x0a, 0x12,
	0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0x66, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10,
	0x67, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x68, 0x12, 0x1d, 0x0a,
	0x19, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x69, 0x12, 0x1d, 0x0a, 0x19,
	0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x6a, 0x12, 0x18, 0x0a, 0x14, 0x54,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x10, 0x6b, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x6c,
	0x12, 0x1b, 0x0a, 0x17, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x6d, 0x12, 0x1c, 0x0a,
	0x18, 0x54, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x54,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0x6f, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x70, 0x12, 0x1a, 0x0a, 0x16,
	0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x71, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x72, 0x12,
	0x17, 0x0a, 0x12, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x71, 0x10, 0xc9, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x10, 0xca, 0x01, 0x12,
	0x10, 0x0a, 0x0b, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x10, 0xcb,
	0x01, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x10, 0xcc, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x54, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x10, 0xcd, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x10, 0xce, 0x01, 0x12, 0x11,
	0x0a, 0x0c, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x10, 0xcf,
	0x01, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x10, 0xd0, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x10, 0xd1, 0x01, 0x12, 0x1a,
	0x0a, 0x15, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x71, 0x10, 0xd2, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x10, 0xd3, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x10, 0xd4, 0x01, 0x12, 0x1d, 0x0a,
	0x18, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x10, 0xd5, 0x01, 0x12, 0x15, 0x0a, 0x10,
	0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x10, 0xd6, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x10, 0xd7, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x10,
	0xd8, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x10, 0xd9,
	0x01, 0x12, 0x1c, 0x0a, 0x17, 0x54, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x10, 0xda, 0x01, 0x12,
	0x1b, 0x0a, 0x16, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x10, 0xdb, 0x01, 0x12, 0x15, 0x0a, 0x10,
	0x54, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x10, 0xdc, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x10, 0xdd, 0x01, 0x12, 0x16, 0x0a,
	0x11, 0x54, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x10, 0xde, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x10, 0xdf, 0x01, 0x12, 0x15, 0x0a, 0x10,
	0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x10, 0xe0, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x10, 0xe1, 0x01,
	0x12, 0x1b, 0x0a, 0x16, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x10, 0xe2, 0x01, 0x12, 0x1a, 0x0a,
	0x15, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x10, 0xe3, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x10, 0xe4, 0x01, 0x12, 0x15,
	0x0a, 0x10, 0x54, 0x47, 0x65, 0x74, 0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x10, 0xe5, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x10, 0xe6, 0x01, 0x12, 0x12,
	0x0a, 0x0d, 0x54, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x10,
	0xe7, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x54, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x10, 0xe8, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x10, 0xe9, 0x01, 0x12, 0x16, 0x0a, 0x11,
	0x54, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x10, 0xea, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x10, 0xeb, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x10, 0xec,
	0x01, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x10, 0xed, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x10, 0xee, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x54,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65,
	0x71, 0x10, 0xef, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x10, 0xf0, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x10, 0xf1, 0x01,
	0x12, 0x17, 0x0a, 0x12, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50,
	0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x10, 0xf2, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x10, 0xad, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x10, 0xae, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x54,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x10, 0xaf, 0x02, 0x12, 0x13,
	0x0a, 0x0e, 0x54, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x10, 0xb0, 0x02, 0x12, 0x10, 0x0a, 0x0b, 0x54, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x10, 0xb1, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb2, 0x02, 0x12, 0x12,
	0x0a, 0x0d, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10,
	0xb3, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb4, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb5,
	0x02, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e,
	0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb6, 0x02, 0x12, 0x1a,
	0x0a, 0x15, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65,
	0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb7, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x10, 0xb8, 0x02, 0x12, 0x1e, 0x0a, 0x19, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x10, 0xb9, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x10, 0xba, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x10, 0xbb, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xbc, 0x02, 0x12, 0x1e, 0x0a, 0x19,
	0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xbd, 0x02, 0x12, 0x1d, 0x0a, 0x18,
	0x54, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xbe, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x54,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xbf, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc0,
	0x02, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc1, 0x02, 0x12, 0x17, 0x0a, 0x12,
	0x54, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x10, 0xc2, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc3, 0x02, 0x12, 0x16, 0x0a,
	0x11, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x10, 0xc4, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x10, 0xc5, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc6,
	0x02, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f,
	0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc7, 0x02, 0x12, 0x14,
	0x0a, 0x0f, 0x54, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x10, 0xc8, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x47, 0x65, 0x74, 0x43, 0x73, 0x72, 0x66,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc9, 0x02, 0x12, 0x18, 0x0a, 0x13,
	0x54, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x10, 0xca, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x10, 0xcb, 0x02, 0x12, 0x12, 0x0a, 0x0d, 0x54,
	0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xcc, 0x02, 0x12,
	0x16, 0x0a, 0x11, 0x54, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x10, 0xcd, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x43, 0x61, 0x6e, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x10, 0xce, 0x02,
	0x12, 0x13, 0x0a, 0x0e, 0x54, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x10, 0xcf, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x10, 0xd0, 0x02, 0x12,
	0x14, 0x0a, 0x0f, 0x54, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x10, 0xd1, 0x02, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xd2, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x54,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x10, 0xd3, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x10, 0xd4, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x10, 0xd5, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xd6, 0x02, 0x12, 0x19, 0x0a,
	0x14, 0x54, 0x4f, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x10, 0x91, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x4f, 0x53, 0x65,
	0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x10, 0x92,
	0x03, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x4f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x10, 0x93, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x4f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x10, 0x94, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x54,
	0x4f, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x10, 0x95, 0x03, 0x12, 0x18,
	0x0a, 0x13, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x10, 0x96, 0x03, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x4f, 0x53, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0x97, 0x03, 0x12, 0x17, 0x0a,
	0x12, 0x54, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x10, 0x98, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x4f, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0x99, 0x03, 0x12, 0x1c,
	0x0a, 0x17, 0x54, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e,
	0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x10, 0x9a, 0x03, 0x12, 0x1b, 0x0a, 0x16,
	0x54, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0x9b, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x4f, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x10, 0x9c, 0x03, 0x12, 0x1f, 0x0a, 0x1a, 0x54, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x10, 0x9d, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x10, 0x9e, 0x03, 0x12, 0x17, 0x0a,
	0x12, 0x54, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x10, 0x9f, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x4f, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xa0, 0x03,
	0x12, 0x1f, 0x0a, 0x1a, 0x54, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xa1,
	0x03, 0x12, 0x1e, 0x0a, 0x19, 0x54, 0x4f, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xa2,
	0x03, 0x12, 0x1d, 0x0a, 0x18, 0x54, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xa3, 0x03,
	0x12, 0x17, 0x0a, 0x12, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x10, 0xa4, 0x03, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x4f, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x10, 0xa5, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xa6, 0x03, 0x12,
	0x17, 0x0a, 0x12, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x10, 0xa7, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x4f, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xa8,
	0x03, 0x12, 0x1d, 0x0a, 0x18, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x10, 0xa9, 0x03,
	0x12, 0x1d, 0x0a, 0x18, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xaa, 0x03, 0x12,
	0x1c, 0x0a, 0x17, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6e,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x10, 0xab, 0x03, 0x12, 0x15, 0x0a,
	0x10, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x10, 0xac, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x43, 0x73, 0x72,
	0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0xad, 0x03, 0x12, 0x19, 0x0a,
	0x14, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x10, 0xae, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x4f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x10, 0xaf, 0x03, 0x12, 0x13,
	0x0a, 0x0e, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x10, 0xb0, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x4f, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb1, 0x03, 0x12, 0x18, 0x0a, 0x13,
	0x54, 0x4f, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x10, 0xb2, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x4f, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb3, 0x03, 0x12, 0x19, 0x0a, 0x14,
	0x54, 0x4f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x10, 0xb4, 0x03, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x4f, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb5, 0x03, 0x12, 0x15,
	0x0a, 0x10, 0x54, 0x4f, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x10, 0xb6, 0x03, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x4f, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb7, 0x03,
	0x12, 0x14, 0x0a, 0x0f, 0x54, 0x4f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x10, 0xb8, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x4f, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb9, 0x03,
	0x12, 0x19, 0x0a, 0x14, 0x54, 0x4f, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xba, 0x03, 0x42, 0x09, 0x0a, 0x07, 0x70,
	0x62, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_onebot_frame_proto_rawDescOnce sync.Once
	file_onebot_frame_proto_rawDescData = file_onebot_frame_proto_rawDesc
)

func file_onebot_frame_proto_rawDescGZIP() []byte {
	file_onebot_frame_proto_rawDescOnce.Do(func() {
		file_onebot_frame_proto_rawDescData = protoimpl.X.CompressGZIP(file_onebot_frame_proto_rawDescData)
	})
	return file_onebot_frame_proto_rawDescData
}

var file_onebot_frame_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_onebot_frame_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_onebot_frame_proto_goTypes = []interface{}{
	(Frame_FrameType)(0),              // 0: onebot.Frame.FrameType
	(*Frame)(nil),                     // 1: onebot.Frame
	(*Frame_Anonymous)(nil),           // 2: onebot.Frame.Anonymous
	(*Frame_File)(nil),                // 3: onebot.Frame.File
	(*Frame_Sender)(nil),              // 4: onebot.Frame.Sender
	nil,                               // 5: onebot.Frame.ExtraEntry
	(*anypb.Any)(nil),                 // 6: google.protobuf.Any
	(*Params)(nil),                    // 7: onebot.Params
	(*Message)(nil),                   // 8: onebot.Message
	(*PrivateMessageEvent)(nil),       // 9: onebot.PrivateMessageEvent
	(*GroupMessageEvent)(nil),         // 10: onebot.GroupMessageEvent
	(*GroupUploadNoticeEvent)(nil),    // 11: onebot.GroupUploadNoticeEvent
	(*GroupAdminNoticeEvent)(nil),     // 12: onebot.GroupAdminNoticeEvent
	(*GroupDecreaseNoticeEvent)(nil),  // 13: onebot.GroupDecreaseNoticeEvent
	(*GroupIncreaseNoticeEvent)(nil),  // 14: onebot.GroupIncreaseNoticeEvent
	(*GroupBanNoticeEvent)(nil),       // 15: onebot.GroupBanNoticeEvent
	(*FriendAddNoticeEvent)(nil),      // 16: onebot.FriendAddNoticeEvent
	(*GroupRecallNoticeEvent)(nil),    // 17: onebot.GroupRecallNoticeEvent
	(*FriendRecallNoticeEvent)(nil),   // 18: onebot.FriendRecallNoticeEvent
	(*FriendRequestEvent)(nil),        // 19: onebot.FriendRequestEvent
	(*GroupRequestEvent)(nil),         // 20: onebot.GroupRequestEvent
	(*GroupTempMessageEvent)(nil),     // 21: onebot.GroupTempMessageEvent
	(*GroupNotifyEvent)(nil),          // 22: onebot.GroupNotifyEvent
	(*SendPrivateMsgReq)(nil),         // 23: onebot.SendPrivateMsgReq
	(*SendGroupMsgReq)(nil),           // 24: onebot.SendGroupMsgReq
	(*SendMsgReq)(nil),                // 25: onebot.SendMsgReq
	(*DeleteMsgReq)(nil),              // 26: onebot.DeleteMsgReq
	(*GetMsgReq)(nil),                 // 27: onebot.GetMsgReq
	(*GetForwardMsgReq)(nil),          // 28: onebot.GetForwardMsgReq
	(*SendLikeReq)(nil),               // 29: onebot.SendLikeReq
	(*SetGroupKickReq)(nil),           // 30: onebot.SetGroupKickReq
	(*SetGroupBanReq)(nil),            // 31: onebot.SetGroupBanReq
	(*SetGroupAnonymousBanReq)(nil),   // 32: onebot.SetGroupAnonymousBanReq
	(*SetGroupWholeBanReq)(nil),       // 33: onebot.SetGroupWholeBanReq
	(*SetGroupAdminReq)(nil),          // 34: onebot.SetGroupAdminReq
	(*SetGroupAnonymousReq)(nil),      // 35: onebot.SetGroupAnonymousReq
	(*SetGroupCardReq)(nil),           // 36: onebot.SetGroupCardReq
	(*SetGroupNameReq)(nil),           // 37: onebot.SetGroupNameReq
	(*SetGroupLeaveReq)(nil),          // 38: onebot.SetGroupLeaveReq
	(*SetGroupSpecialTitleReq)(nil),   // 39: onebot.SetGroupSpecialTitleReq
	(*SetFriendAddRequestReq)(nil),    // 40: onebot.SetFriendAddRequestReq
	(*SetGroupAddRequestReq)(nil),     // 41: onebot.SetGroupAddRequestReq
	(*GetLoginInfoReq)(nil),           // 42: onebot.GetLoginInfoReq
	(*GetStrangerInfoReq)(nil),        // 43: onebot.GetStrangerInfoReq
	(*GetFriendListReq)(nil),          // 44: onebot.GetFriendListReq
	(*GetGroupInfoReq)(nil),           // 45: onebot.GetGroupInfoReq
	(*GetGroupListReq)(nil),           // 46: onebot.GetGroupListReq
	(*GetGroupMemberInfoReq)(nil),     // 47: onebot.GetGroupMemberInfoReq
	(*GetGroupMemberListReq)(nil),     // 48: onebot.GetGroupMemberListReq
	(*GetGroupHonorInfoReq)(nil),      // 49: onebot.GetGroupHonorInfoReq
	(*GetCookiesReq)(nil),             // 50: onebot.GetCookiesReq
	(*GetCsrfTokenReq)(nil),           // 51: onebot.GetCsrfTokenReq
	(*GetCredentialsReq)(nil),         // 52: onebot.GetCredentialsReq
	(*GetRecordReq)(nil),              // 53: onebot.GetRecordReq
	(*GetImageReq)(nil),               // 54: onebot.GetImageReq
	(*CanSendImageReq)(nil),           // 55: onebot.CanSendImageReq
	(*CanSendRecordReq)(nil),          // 56: onebot.CanSendRecordReq
	(*GetStatusReq)(nil),              // 57: onebot.GetStatusReq
	(*GetVersionInfoReq)(nil),         // 58: onebot.GetVersionInfoReq
	(*SetRestartReq)(nil),             // 59: onebot.SetRestartReq
	(*CleanCacheReq)(nil),             // 60: onebot.CleanCacheReq
	(*SetGroupSignInReq)(nil),         // 61: onebot.SetGroupSignInReq
	(*SendMusicReq)(nil),              // 62: onebot.SendMusicReq
	(*SendGroupPokeReq)(nil),          // 63: onebot.SendGroupPokeReq
	(*SendFriendPokeReq)(nil),         // 64: onebot.SendFriendPokeReq
	(*SendPrivateMsgResp)(nil),        // 65: onebot.SendPrivateMsgResp
	(*SendGroupMsgResp)(nil),          // 66: onebot.SendGroupMsgResp
	(*SendMsgResp)(nil),               // 67: onebot.SendMsgResp
	(*DeleteMsgResp)(nil),             // 68: onebot.DeleteMsgResp
	(*GetMsgResp)(nil),                // 69: onebot.GetMsgResp
	(*GetForwardMsgResp)(nil),         // 70: onebot.GetForwardMsgResp
	(*SendLikeResp)(nil),              // 71: onebot.SendLikeResp
	(*SetGroupKickResp)(nil),          // 72: onebot.SetGroupKickResp
	(*SetGroupBanResp)(nil),           // 73: onebot.SetGroupBanResp
	(*SetGroupAnonymousBanResp)(nil),  // 74: onebot.SetGroupAnonymousBanResp
	(*SetGroupWholeBanResp)(nil),      // 75: onebot.SetGroupWholeBanResp
	(*SetGroupAdminResp)(nil),         // 76: onebot.SetGroupAdminResp
	(*SetGroupAnonymousResp)(nil),     // 77: onebot.SetGroupAnonymousResp
	(*SetGroupCardResp)(nil),          // 78: onebot.SetGroupCardResp
	(*SetGroupNameResp)(nil),          // 79: onebot.SetGroupNameResp
	(*SetGroupLeaveResp)(nil),         // 80: onebot.SetGroupLeaveResp
	(*SetGroupSpecialTitleResp)(nil),  // 81: onebot.SetGroupSpecialTitleResp
	(*SetFriendAddRequestResp)(nil),   // 82: onebot.SetFriendAddRequestResp
	(*SetGroupAddRequestResp)(nil),    // 83: onebot.SetGroupAddRequestResp
	(*GetLoginInfoResp)(nil),          // 84: onebot.GetLoginInfoResp
	(*GetStrangerInfoResp)(nil),       // 85: onebot.GetStrangerInfoResp
	(*GetFriendListResp)(nil),         // 86: onebot.GetFriendListResp
	(*GetGroupInfoResp)(nil),          // 87: onebot.GetGroupInfoResp
	(*GetGroupListResp)(nil),          // 88: onebot.GetGroupListResp
	(*GetGroupMemberInfoResp)(nil),    // 89: onebot.GetGroupMemberInfoResp
	(*GetGroupMemberListResp)(nil),    // 90: onebot.GetGroupMemberListResp
	(*GetGroupHonorInfoResp)(nil),     // 91: onebot.GetGroupHonorInfoResp
	(*GetCookiesResp)(nil),            // 92: onebot.GetCookiesResp
	(*GetCsrfTokenResp)(nil),          // 93: onebot.GetCsrfTokenResp
	(*GetCredentialsResp)(nil),        // 94: onebot.GetCredentialsResp
	(*GetRecordResp)(nil),             // 95: onebot.GetRecordResp
	(*GetImageResp)(nil),              // 96: onebot.GetImageResp
	(*CanSendImageResp)(nil),          // 97: onebot.CanSendImageResp
	(*CanSendRecordResp)(nil),         // 98: onebot.CanSendRecordResp
	(*GetStatusResp)(nil),             // 99: onebot.GetStatusResp
	(*GetVersionInfoResp)(nil),        // 100: onebot.GetVersionInfoResp
	(*SetRestartResp)(nil),            // 101: onebot.SetRestartResp
	(*CleanCacheResp)(nil),            // 102: onebot.CleanCacheResp
	(*SetGroupSignInResp)(nil),        // 103: onebot.SetGroupSignInResp
	(*SendMusicResp)(nil),             // 104: onebot.SendMusicResp
	(*SendGroupPokeResp)(nil),         // 105: onebot.SendGroupPokeResp
	(*SendFriendPokeResp)(nil),        // 106: onebot.SendFriendPokeResp
	(*OSendPrivateMsgResp)(nil),       // 107: onebot.OSendPrivateMsgResp
	(*OSendGroupMsgResp)(nil),         // 108: onebot.OSendGroupMsgResp
	(*OSendMsgResp)(nil),              // 109: onebot.OSendMsgResp
	(*ODeleteMsgResp)(nil),            // 110: onebot.ODeleteMsgResp
	(*OGetMsgResp)(nil),               // 111: onebot.OGetMsgResp
	(*OGetForwardMsgResp)(nil),        // 112: onebot.OGetForwardMsgResp
	(*OSendLikeResp)(nil),             // 113: onebot.OSendLikeResp
	(*OSetGroupKickResp)(nil),         // 114: onebot.OSetGroupKickResp
	(*OSetGroupBanResp)(nil),          // 115: onebot.OSetGroupBanResp
	(*OSetGroupAnonymousBanResp)(nil), // 116: onebot.OSetGroupAnonymousBanResp
	(*OSetGroupWholeBanResp)(nil),     // 117: onebot.OSetGroupWholeBanResp
	(*OSetGroupAdminResp)(nil),        // 118: onebot.OSetGroupAdminResp
	(*OSetGroupAnonymousResp)(nil),    // 119: onebot.OSetGroupAnonymousResp
	(*OSetGroupCardResp)(nil),         // 120: onebot.OSetGroupCardResp
	(*OSetGroupNameResp)(nil),         // 121: onebot.OSetGroupNameResp
	(*OSetGroupLeaveResp)(nil),        // 122: onebot.OSetGroupLeaveResp
	(*OSetGroupSpecialTitleResp)(nil), // 123: onebot.OSetGroupSpecialTitleResp
	(*OSetFriendAddRequestResp)(nil),  // 124: onebot.OSetFriendAddRequestResp
	(*OSetGroupAddRequestResp)(nil),   // 125: onebot.OSetGroupAddRequestResp
	(*OGetLoginInfoResp)(nil),         // 126: onebot.OGetLoginInfoResp
	(*OGetStrangerInfoResp)(nil),      // 127: onebot.OGetStrangerInfoResp
	(*OGetFriendListResp)(nil),        // 128: onebot.OGetFriendListResp
	(*OGetGroupInfoResp)(nil),         // 129: onebot.OGetGroupInfoResp
	(*OGetGroupListResp)(nil),         // 130: onebot.OGetGroupListResp
	(*OGetGroupMemberInfoResp)(nil),   // 131: onebot.OGetGroupMemberInfoResp
	(*OGetGroupMemberListResp)(nil),   // 132: onebot.OGetGroupMemberListResp
	(*OGetGroupHonorInfoResp)(nil),    // 133: onebot.OGetGroupHonorInfoResp
	(*OGetCookiesResp)(nil),           // 134: onebot.OGetCookiesResp
	(*OGetCsrfTokenResp)(nil),         // 135: onebot.OGetCsrfTokenResp
	(*OGetCredentialsResp)(nil),       // 136: onebot.OGetCredentialsResp
	(*OGetRecordResp)(nil),            // 137: onebot.OGetRecordResp
	(*OGetImageResp)(nil),             // 138: onebot.OGetImageResp
	(*OCanSendImageResp)(nil),         // 139: onebot.OCanSendImageResp
	(*OCanSendRecordResp)(nil),        // 140: onebot.OCanSendRecordResp
	(*OGetStatusResp)(nil),            // 141: onebot.OGetStatusResp
	(*OGetVersionInfoResp)(nil),       // 142: onebot.OGetVersionInfoResp
	(*OSetRestartResp)(nil),           // 143: onebot.OSetRestartResp
	(*OCleanCacheResp)(nil),           // 144: onebot.OCleanCacheResp
	(*OSetGroupSignInResp)(nil),       // 145: onebot.OSetGroupSignInResp
	(*OSendMusicResp)(nil),            // 146: onebot.OSendMusicResp
	(*OSendGroupPokeResp)(nil),        // 147: onebot.OSendGroupPokeResp
	(*OSendFriendPokeResp)(nil),       // 148: onebot.OSendFriendPokeResp
}
var file_onebot_frame_proto_depIdxs = []int32{
	0,   // 0: onebot.Frame.frame_type:type_name -> onebot.Frame.FrameType
	6,   // 1: onebot.Frame.status:type_name -> google.protobuf.Any
	6,   // 2: onebot.Frame.data:type_name -> google.protobuf.Any
	7,   // 3: onebot.Frame.params:type_name -> onebot.Params
	8,   // 4: onebot.Frame.message:type_name -> onebot.Message
	4,   // 5: onebot.Frame.sender:type_name -> onebot.Frame.Sender
	2,   // 6: onebot.Frame.anonymous:type_name -> onebot.Frame.Anonymous
	3,   // 7: onebot.Frame.file:type_name -> onebot.Frame.File
	5,   // 8: onebot.Frame.extra:type_name -> onebot.Frame.ExtraEntry
	9,   // 9: onebot.Frame.private_message_event:type_name -> onebot.PrivateMessageEvent
	10,  // 10: onebot.Frame.group_message_event:type_name -> onebot.GroupMessageEvent
	11,  // 11: onebot.Frame.group_upload_notice_event:type_name -> onebot.GroupUploadNoticeEvent
	12,  // 12: onebot.Frame.group_admin_notice_event:type_name -> onebot.GroupAdminNoticeEvent
	13,  // 13: onebot.Frame.group_decrease_notice_event:type_name -> onebot.GroupDecreaseNoticeEvent
	14,  // 14: onebot.Frame.group_increase_notice_event:type_name -> onebot.GroupIncreaseNoticeEvent
	15,  // 15: onebot.Frame.group_ban_notice_event:type_name -> onebot.GroupBanNoticeEvent
	16,  // 16: onebot.Frame.friend_add_notice_event:type_name -> onebot.FriendAddNoticeEvent
	17,  // 17: onebot.Frame.group_recall_notice_event:type_name -> onebot.GroupRecallNoticeEvent
	18,  // 18: onebot.Frame.friend_recall_notice_event:type_name -> onebot.FriendRecallNoticeEvent
	19,  // 19: onebot.Frame.friend_request_event:type_name -> onebot.FriendRequestEvent
	20,  // 20: onebot.Frame.group_request_event:type_name -> onebot.GroupRequestEvent
	21,  // 21: onebot.Frame.group_temp_message_event:type_name -> onebot.GroupTempMessageEvent
	22,  // 22: onebot.Frame.group_notify_event:type_name -> onebot.GroupNotifyEvent
	23,  // 23: onebot.Frame.send_private_msg_req:type_name -> onebot.SendPrivateMsgReq
	24,  // 24: onebot.Frame.send_group_msg_req:type_name -> onebot.SendGroupMsgReq
	25,  // 25: onebot.Frame.send_msg_req:type_name -> onebot.SendMsgReq
	26,  // 26: onebot.Frame.delete_msg_req:type_name -> onebot.DeleteMsgReq
	27,  // 27: onebot.Frame.get_msg_req:type_name -> onebot.GetMsgReq
	28,  // 28: onebot.Frame.get_forward_msg_req:type_name -> onebot.GetForwardMsgReq
	29,  // 29: onebot.Frame.send_like_req:type_name -> onebot.SendLikeReq
	30,  // 30: onebot.Frame.set_group_kick_req:type_name -> onebot.SetGroupKickReq
	31,  // 31: onebot.Frame.set_group_ban_req:type_name -> onebot.SetGroupBanReq
	32,  // 32: onebot.Frame.set_group_anonymous_ban_req:type_name -> onebot.SetGroupAnonymousBanReq
	33,  // 33: onebot.Frame.set_group_whole_ban_req:type_name -> onebot.SetGroupWholeBanReq
	34,  // 34: onebot.Frame.set_group_admin_req:type_name -> onebot.SetGroupAdminReq
	35,  // 35: onebot.Frame.set_group_anonymous_req:type_name -> onebot.SetGroupAnonymousReq
	36,  // 36: onebot.Frame.set_group_card_req:type_name -> onebot.SetGroupCardReq
	37,  // 37: onebot.Frame.set_group_name_req:type_name -> onebot.SetGroupNameReq
	38,  // 38: onebot.Frame.set_group_leave_req:type_name -> onebot.SetGroupLeaveReq
	39,  // 39: onebot.Frame.set_group_special_title_req:type_name -> onebot.SetGroupSpecialTitleReq
	40,  // 40: onebot.Frame.set_friend_add_request_req:type_name -> onebot.SetFriendAddRequestReq
	41,  // 41: onebot.Frame.set_group_add_request_req:type_name -> onebot.SetGroupAddRequestReq
	42,  // 42: onebot.Frame.get_login_info_req:type_name -> onebot.GetLoginInfoReq
	43,  // 43: onebot.Frame.get_stranger_info_req:type_name -> onebot.GetStrangerInfoReq
	44,  // 44: onebot.Frame.get_friend_list_req:type_name -> onebot.GetFriendListReq
	45,  // 45: onebot.Frame.get_group_info_req:type_name -> onebot.GetGroupInfoReq
	46,  // 46: onebot.Frame.get_group_list_req:type_name -> onebot.GetGroupListReq
	47,  // 47: onebot.Frame.get_group_member_info_req:type_name -> onebot.GetGroupMemberInfoReq
	48,  // 48: onebot.Frame.get_group_member_list_req:type_name -> onebot.GetGroupMemberListReq
	49,  // 49: onebot.Frame.get_group_honor_info_req:type_name -> onebot.GetGroupHonorInfoReq
	50,  // 50: onebot.Frame.get_cookies_req:type_name -> onebot.GetCookiesReq
	51,  // 51: onebot.Frame.get_csrf_token_req:type_name -> onebot.GetCsrfTokenReq
	52,  // 52: onebot.Frame.get_credentials_req:type_name -> onebot.GetCredentialsReq
	53,  // 53: onebot.Frame.get_record_req:type_name -> onebot.GetRecordReq
	54,  // 54: onebot.Frame.get_image_req:type_name -> onebot.GetImageReq
	55,  // 55: onebot.Frame.can_send_image_req:type_name -> onebot.CanSendImageReq
	56,  // 56: onebot.Frame.can_send_record_req:type_name -> onebot.CanSendRecordReq
	57,  // 57: onebot.Frame.get_status_req:type_name -> onebot.GetStatusReq
	58,  // 58: onebot.Frame.get_version_info_req:type_name -> onebot.GetVersionInfoReq
	59,  // 59: onebot.Frame.set_restart_req:type_name -> onebot.SetRestartReq
	60,  // 60: onebot.Frame.clean_cache_req:type_name -> onebot.CleanCacheReq
	61,  // 61: onebot.Frame.set_group_sign_in_req:type_name -> onebot.SetGroupSignInReq
	62,  // 62: onebot.Frame.send_music_req:type_name -> onebot.SendMusicReq
	63,  // 63: onebot.Frame.send_group_poke_req:type_name -> onebot.SendGroupPokeReq
	64,  // 64: onebot.Frame.send_friend_poke_req:type_name -> onebot.SendFriendPokeReq
	65,  // 65: onebot.Frame.send_private_msg_resp:type_name -> onebot.SendPrivateMsgResp
	66,  // 66: onebot.Frame.send_group_msg_resp:type_name -> onebot.SendGroupMsgResp
	67,  // 67: onebot.Frame.send_msg_resp:type_name -> onebot.SendMsgResp
	68,  // 68: onebot.Frame.delete_msg_resp:type_name -> onebot.DeleteMsgResp
	69,  // 69: onebot.Frame.get_msg_resp:type_name -> onebot.GetMsgResp
	70,  // 70: onebot.Frame.get_forward_msg_resp:type_name -> onebot.GetForwardMsgResp
	71,  // 71: onebot.Frame.send_like_resp:type_name -> onebot.SendLikeResp
	72,  // 72: onebot.Frame.set_group_kick_resp:type_name -> onebot.SetGroupKickResp
	73,  // 73: onebot.Frame.set_group_ban_resp:type_name -> onebot.SetGroupBanResp
	74,  // 74: onebot.Frame.set_group_anonymous_ban_resp:type_name -> onebot.SetGroupAnonymousBanResp
	75,  // 75: onebot.Frame.set_group_whole_ban_resp:type_name -> onebot.SetGroupWholeBanResp
	76,  // 76: onebot.Frame.set_group_admin_resp:type_name -> onebot.SetGroupAdminResp
	77,  // 77: onebot.Frame.set_group_anonymous_resp:type_name -> onebot.SetGroupAnonymousResp
	78,  // 78: onebot.Frame.set_group_card_resp:type_name -> onebot.SetGroupCardResp
	79,  // 79: onebot.Frame.set_group_name_resp:type_name -> onebot.SetGroupNameResp
	80,  // 80: onebot.Frame.set_group_leave_resp:type_name -> onebot.SetGroupLeaveResp
	81,  // 81: onebot.Frame.set_group_special_title_resp:type_name -> onebot.SetGroupSpecialTitleResp
	82,  // 82: onebot.Frame.set_friend_add_request_resp:type_name -> onebot.SetFriendAddRequestResp
	83,  // 83: onebot.Frame.set_group_add_request_resp:type_name -> onebot.SetGroupAddRequestResp
	84,  // 84: onebot.Frame.get_login_info_resp:type_name -> onebot.GetLoginInfoResp
	85,  // 85: onebot.Frame.get_stranger_info_resp:type_name -> onebot.GetStrangerInfoResp
	86,  // 86: onebot.Frame.get_friend_list_resp:type_name -> onebot.GetFriendListResp
	87,  // 87: onebot.Frame.get_group_info_resp:type_name -> onebot.GetGroupInfoResp
	88,  // 88: onebot.Frame.get_group_list_resp:type_name -> onebot.GetGroupListResp
	89,  // 89: onebot.Frame.get_group_member_info_resp:type_name -> onebot.GetGroupMemberInfoResp
	90,  // 90: onebot.Frame.get_group_member_list_resp:type_name -> onebot.GetGroupMemberListResp
	91,  // 91: onebot.Frame.get_group_honor_info_resp:type_name -> onebot.GetGroupHonorInfoResp
	92,  // 92: onebot.Frame.get_cookies_resp:type_name -> onebot.GetCookiesResp
	93,  // 93: onebot.Frame.get_csrf_token_resp:type_name -> onebot.GetCsrfTokenResp
	94,  // 94: onebot.Frame.get_credentials_resp:type_name -> onebot.GetCredentialsResp
	95,  // 95: onebot.Frame.get_record_resp:type_name -> onebot.GetRecordResp
	96,  // 96: onebot.Frame.get_image_resp:type_name -> onebot.GetImageResp
	97,  // 97: onebot.Frame.can_send_image_resp:type_name -> onebot.CanSendImageResp
	98,  // 98: onebot.Frame.can_send_record_resp:type_name -> onebot.CanSendRecordResp
	99,  // 99: onebot.Frame.get_status_resp:type_name -> onebot.GetStatusResp
	100, // 100: onebot.Frame.get_version_info_resp:type_name -> onebot.GetVersionInfoResp
	101, // 101: onebot.Frame.set_restart_resp:type_name -> onebot.SetRestartResp
	102, // 102: onebot.Frame.clean_cache_resp:type_name -> onebot.CleanCacheResp
	103, // 103: onebot.Frame.set_group_sign_in_resp:type_name -> onebot.SetGroupSignInResp
	104, // 104: onebot.Frame.send_music_resp:type_name -> onebot.SendMusicResp
	105, // 105: onebot.Frame.send_group_poke_resp:type_name -> onebot.SendGroupPokeResp
	106, // 106: onebot.Frame.send_friend_poke_resp:type_name -> onebot.SendFriendPokeResp
	107, // 107: onebot.Frame.o_send_private_msg_resp:type_name -> onebot.OSendPrivateMsgResp
	108, // 108: onebot.Frame.o_send_group_msg_resp:type_name -> onebot.OSendGroupMsgResp
	109, // 109: onebot.Frame.o_send_msg_resp:type_name -> onebot.OSendMsgResp
	110, // 110: onebot.Frame.o_delete_msg_resp:type_name -> onebot.ODeleteMsgResp
	111, // 111: onebot.Frame.o_get_msg_resp:type_name -> onebot.OGetMsgResp
	112, // 112: onebot.Frame.o_get_forward_msg_resp:type_name -> onebot.OGetForwardMsgResp
	113, // 113: onebot.Frame.o_send_like_resp:type_name -> onebot.OSendLikeResp
	114, // 114: onebot.Frame.o_set_group_kick_resp:type_name -> onebot.OSetGroupKickResp
	115, // 115: onebot.Frame.o_set_group_ban_resp:type_name -> onebot.OSetGroupBanResp
	116, // 116: onebot.Frame.o_set_group_anonymous_ban_resp:type_name -> onebot.OSetGroupAnonymousBanResp
	117, // 117: onebot.Frame.o_set_group_whole_ban_resp:type_name -> onebot.OSetGroupWholeBanResp
	118, // 118: onebot.Frame.o_set_group_admin_resp:type_name -> onebot.OSetGroupAdminResp
	119, // 119: onebot.Frame.o_set_group_anonymous_resp:type_name -> onebot.OSetGroupAnonymousResp
	120, // 120: onebot.Frame.o_set_group_card_resp:type_name -> onebot.OSetGroupCardResp
	121, // 121: onebot.Frame.o_set_group_name_resp:type_name -> onebot.OSetGroupNameResp
	122, // 122: onebot.Frame.o_set_group_leave_resp:type_name -> onebot.OSetGroupLeaveResp
	123, // 123: onebot.Frame.o_set_group_special_title_resp:type_name -> onebot.OSetGroupSpecialTitleResp
	124, // 124: onebot.Frame.o_set_friend_add_request_resp:type_name -> onebot.OSetFriendAddRequestResp
	125, // 125: onebot.Frame.o_set_group_add_request_resp:type_name -> onebot.OSetGroupAddRequestResp
	126, // 126: onebot.Frame.o_get_login_info_resp:type_name -> onebot.OGetLoginInfoResp
	127, // 127: onebot.Frame.o_get_stranger_info_resp:type_name -> onebot.OGetStrangerInfoResp
	128, // 128: onebot.Frame.o_get_friend_list_resp:type_name -> onebot.OGetFriendListResp
	129, // 129: onebot.Frame.o_get_group_info_resp:type_name -> onebot.OGetGroupInfoResp
	130, // 130: onebot.Frame.o_get_group_list_resp:type_name -> onebot.OGetGroupListResp
	131, // 131: onebot.Frame.o_get_group_member_info_resp:type_name -> onebot.OGetGroupMemberInfoResp
	132, // 132: onebot.Frame.o_get_group_member_list_resp:type_name -> onebot.OGetGroupMemberListResp
	133, // 133: onebot.Frame.o_get_group_honor_info_resp:type_name -> onebot.OGetGroupHonorInfoResp
	134, // 134: onebot.Frame.o_get_cookies_resp:type_name -> onebot.OGetCookiesResp
	135, // 135: onebot.Frame.o_get_csrf_token_resp:type_name -> onebot.OGetCsrfTokenResp
	136, // 136: onebot.Frame.o_get_credentials_resp:type_name -> onebot.OGetCredentialsResp
	137, // 137: onebot.Frame.o_get_record_resp:type_name -> onebot.OGetRecordResp
	138, // 138: onebot.Frame.o_get_image_resp:type_name -> onebot.OGetImageResp
	139, // 139: onebot.Frame.o_can_send_image_resp:type_name -> onebot.OCanSendImageResp
	140, // 140: onebot.Frame.o_can_send_record_resp:type_name -> onebot.OCanSendRecordResp
	141, // 141: onebot.Frame.o_get_status_resp:type_name -> onebot.OGetStatusResp
	142, // 142: onebot.Frame.o_get_version_info_resp:type_name -> onebot.OGetVersionInfoResp
	143, // 143: onebot.Frame.o_set_restart_resp:type_name -> onebot.OSetRestartResp
	144, // 144: onebot.Frame.o_clean_cache_resp:type_name -> onebot.OCleanCacheResp
	145, // 145: onebot.Frame.o_set_group_sign_in_resp:type_name -> onebot.OSetGroupSignInResp
	146, // 146: onebot.Frame.o_send_music_resp:type_name -> onebot.OSendMusicResp
	147, // 147: onebot.Frame.o_send_group_poke_resp:type_name -> onebot.OSendGroupPokeResp
	148, // 148: onebot.Frame.o_send_friend_poke_resp:type_name -> onebot.OSendFriendPokeResp
	149, // [149:149] is the sub-list for method output_type
	149, // [149:149] is the sub-list for method input_type
	149, // [149:149] is the sub-list for extension type_name
	149, // [149:149] is the sub-list for extension extendee
	0,   // [0:149] is the sub-list for field type_name
}

func init() { file_onebot_frame_proto_init() }
func file_onebot_frame_proto_init() {
	if File_onebot_frame_proto != nil {
		return
	}
	file_onebot_base_proto_init()
	file_onebot_api_proto_init()
	file_onebot_event_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_onebot_frame_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_frame_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame_Anonymous); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_frame_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_frame_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame_Sender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_onebot_frame_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Frame_PrivateMessageEvent)(nil),
		(*Frame_GroupMessageEvent)(nil),
		(*Frame_GroupUploadNoticeEvent)(nil),
		(*Frame_GroupAdminNoticeEvent)(nil),
		(*Frame_GroupDecreaseNoticeEvent)(nil),
		(*Frame_GroupIncreaseNoticeEvent)(nil),
		(*Frame_GroupBanNoticeEvent)(nil),
		(*Frame_FriendAddNoticeEvent)(nil),
		(*Frame_GroupRecallNoticeEvent)(nil),
		(*Frame_FriendRecallNoticeEvent)(nil),
		(*Frame_FriendRequestEvent)(nil),
		(*Frame_GroupRequestEvent)(nil),
		(*Frame_GroupTempMessageEvent)(nil),
		(*Frame_GroupNotifyEvent)(nil),
		(*Frame_SendPrivateMsgReq)(nil),
		(*Frame_SendGroupMsgReq)(nil),
		(*Frame_SendMsgReq)(nil),
		(*Frame_DeleteMsgReq)(nil),
		(*Frame_GetMsgReq)(nil),
		(*Frame_GetForwardMsgReq)(nil),
		(*Frame_SendLikeReq)(nil),
		(*Frame_SetGroupKickReq)(nil),
		(*Frame_SetGroupBanReq)(nil),
		(*Frame_SetGroupAnonymousBanReq)(nil),
		(*Frame_SetGroupWholeBanReq)(nil),
		(*Frame_SetGroupAdminReq)(nil),
		(*Frame_SetGroupAnonymousReq)(nil),
		(*Frame_SetGroupCardReq)(nil),
		(*Frame_SetGroupNameReq)(nil),
		(*Frame_SetGroupLeaveReq)(nil),
		(*Frame_SetGroupSpecialTitleReq)(nil),
		(*Frame_SetFriendAddRequestReq)(nil),
		(*Frame_SetGroupAddRequestReq)(nil),
		(*Frame_GetLoginInfoReq)(nil),
		(*Frame_GetStrangerInfoReq)(nil),
		(*Frame_GetFriendListReq)(nil),
		(*Frame_GetGroupInfoReq)(nil),
		(*Frame_GetGroupListReq)(nil),
		(*Frame_GetGroupMemberInfoReq)(nil),
		(*Frame_GetGroupMemberListReq)(nil),
		(*Frame_GetGroupHonorInfoReq)(nil),
		(*Frame_GetCookiesReq)(nil),
		(*Frame_GetCsrfTokenReq)(nil),
		(*Frame_GetCredentialsReq)(nil),
		(*Frame_GetRecordReq)(nil),
		(*Frame_GetImageReq)(nil),
		(*Frame_CanSendImageReq)(nil),
		(*Frame_CanSendRecordReq)(nil),
		(*Frame_GetStatusReq)(nil),
		(*Frame_GetVersionInfoReq)(nil),
		(*Frame_SetRestartReq)(nil),
		(*Frame_CleanCacheReq)(nil),
		(*Frame_SetGroupSignInReq)(nil),
		(*Frame_SendMusicReq)(nil),
		(*Frame_SendGroupPokeReq)(nil),
		(*Frame_SendFriendPokeReq)(nil),
		(*Frame_SendPrivateMsgResp)(nil),
		(*Frame_SendGroupMsgResp)(nil),
		(*Frame_SendMsgResp)(nil),
		(*Frame_DeleteMsgResp)(nil),
		(*Frame_GetMsgResp)(nil),
		(*Frame_GetForwardMsgResp)(nil),
		(*Frame_SendLikeResp)(nil),
		(*Frame_SetGroupKickResp)(nil),
		(*Frame_SetGroupBanResp)(nil),
		(*Frame_SetGroupAnonymousBanResp)(nil),
		(*Frame_SetGroupWholeBanResp)(nil),
		(*Frame_SetGroupAdminResp)(nil),
		(*Frame_SetGroupAnonymousResp)(nil),
		(*Frame_SetGroupCardResp)(nil),
		(*Frame_SetGroupNameResp)(nil),
		(*Frame_SetGroupLeaveResp)(nil),
		(*Frame_SetGroupSpecialTitleResp)(nil),
		(*Frame_SetFriendAddRequestResp)(nil),
		(*Frame_SetGroupAddRequestResp)(nil),
		(*Frame_GetLoginInfoResp)(nil),
		(*Frame_GetStrangerInfoResp)(nil),
		(*Frame_GetFriendListResp)(nil),
		(*Frame_GetGroupInfoResp)(nil),
		(*Frame_GetGroupListResp)(nil),
		(*Frame_GetGroupMemberInfoResp)(nil),
		(*Frame_GetGroupMemberListResp)(nil),
		(*Frame_GetGroupHonorInfoResp)(nil),
		(*Frame_GetCookiesResp)(nil),
		(*Frame_GetCsrfTokenResp)(nil),
		(*Frame_GetCredentialsResp)(nil),
		(*Frame_GetRecordResp)(nil),
		(*Frame_GetImageResp)(nil),
		(*Frame_CanSendImageResp)(nil),
		(*Frame_CanSendRecordResp)(nil),
		(*Frame_GetStatusResp)(nil),
		(*Frame_GetVersionInfoResp)(nil),
		(*Frame_SetRestartResp)(nil),
		(*Frame_CleanCacheResp)(nil),
		(*Frame_SetGroupSignInResp)(nil),
		(*Frame_SendMusicResp)(nil),
		(*Frame_SendGroupPokeResp)(nil),
		(*Frame_SendFriendPokeResp)(nil),
		(*Frame_OSendPrivateMsgResp)(nil),
		(*Frame_OSendGroupMsgResp)(nil),
		(*Frame_OSendMsgResp)(nil),
		(*Frame_ODeleteMsgResp)(nil),
		(*Frame_OGetMsgResp)(nil),
		(*Frame_OGetForwardMsgResp)(nil),
		(*Frame_OSendLikeResp)(nil),
		(*Frame_OSetGroupKickResp)(nil),
		(*Frame_OSetGroupBanResp)(nil),
		(*Frame_OSetGroupAnonymousBanResp)(nil),
		(*Frame_OSetGroupWholeBanResp)(nil),
		(*Frame_OSetGroupAdminResp)(nil),
		(*Frame_OSetGroupAnonymousResp)(nil),
		(*Frame_OSetGroupCardResp)(nil),
		(*Frame_OSetGroupNameResp)(nil),
		(*Frame_OSetGroupLeaveResp)(nil),
		(*Frame_OSetGroupSpecialTitleResp)(nil),
		(*Frame_OSetFriendAddRequestResp)(nil),
		(*Frame_OSetGroupAddRequestResp)(nil),
		(*Frame_OGetLoginInfoResp)(nil),
		(*Frame_OGetStrangerInfoResp)(nil),
		(*Frame_OGetFriendListResp)(nil),
		(*Frame_OGetGroupInfoResp)(nil),
		(*Frame_OGetGroupListResp)(nil),
		(*Frame_OGetGroupMemberInfoResp)(nil),
		(*Frame_OGetGroupMemberListResp)(nil),
		(*Frame_OGetGroupHonorInfoResp)(nil),
		(*Frame_OGetCookiesResp)(nil),
		(*Frame_OGetCsrfTokenResp)(nil),
		(*Frame_OGetCredentialsResp)(nil),
		(*Frame_OGetRecordResp)(nil),
		(*Frame_OGetImageResp)(nil),
		(*Frame_OCanSendImageResp)(nil),
		(*Frame_OCanSendRecordResp)(nil),
		(*Frame_OGetStatusResp)(nil),
		(*Frame_OGetVersionInfoResp)(nil),
		(*Frame_OSetRestartResp)(nil),
		(*Frame_OCleanCacheResp)(nil),
		(*Frame_OSetGroupSignInResp)(nil),
		(*Frame_OSendMusicResp)(nil),
		(*Frame_OSendGroupPokeResp)(nil),
		(*Frame_OSendFriendPokeResp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_onebot_frame_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_onebot_frame_proto_goTypes,
		DependencyIndexes: file_onebot_frame_proto_depIdxs,
		EnumInfos:         file_onebot_frame_proto_enumTypes,
		MessageInfos:      file_onebot_frame_proto_msgTypes,
	}.Build()
	File_onebot_frame_proto = out.File
	file_onebot_frame_proto_rawDesc = nil
	file_onebot_frame_proto_goTypes = nil
	file_onebot_frame_proto_depIdxs = nil
}
